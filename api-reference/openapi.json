{"openapi": "3.1.0", "info": {"title": "DataBraid - API", "version": "0.1.0"}, "servers": [{"url": "https://api.databraid.io"}], "paths": {"/api/v0.1/carriers": {"get": {"tags": ["carriers"], "summary": "Get Carriers", "description": "Return a list of supported carriers based on the provided API key.", "operationId": "carriers-get_carriers", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "first", "in": "query", "required": false, "schema": {"type": "integer", "title": "First"}}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "title": "Offset"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CarrierList"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/billing": {"get": {"tags": ["policies"], "summary": "Get Policy Billing Details", "operationId": "policies-get_policy_billing_details", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/PolicyBillingDetails"}, {"$ref": "#/components/schemas/AsyncResponse_PolicyBillingDetails_"}], "title": "Response Policies-Get Policy Billing Details"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/drivers": {"post": {"tags": ["drivers"], "summary": "Add Driver", "operationId": "drivers-add_driver", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateDriverInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/AddDriverResponse"}, {"$ref": "#/components/schemas/AsyncResponse_AddDriverResponse_"}], "title": "Response Drivers-Add Driver"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/vehicles": {"post": {"tags": ["vehicles"], "summary": "Add Vehicle", "operationId": "vehicles-add_vehicle", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateVehicleRequestInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/AddVehicleResponse"}, {"$ref": "#/components/schemas/AsyncResponse_AddVehicleResponse_"}], "title": "Response Vehicles-Add Vehicle"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/vehicles/{vehicle_vin}/swap": {"post": {"tags": ["vehicles"], "summary": "Swap Vehicle", "description": "Swap the vehicle (vehicle_vin) with the provided new vehicle", "operationId": "vehicles-swap_vehicle", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "vehicle_vin", "in": "path", "required": true, "schema": {"type": "string", "title": "Vehicle Vin"}}, {"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SwapVehicleInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/SwapVehicleResponse"}, {"$ref": "#/components/schemas/AsyncResponse_SwapVehicleResponse_"}], "title": "Response Vehicles-Swap Vehicle"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/jobs/{job_id}": {"get": {"tags": ["async jobs"], "summary": "Get Job", "operationId": "async jobs-get_job", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Job Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/AsyncResponse_AddDriverResponse_"}, {"$ref": "#/components/schemas/AsyncResponse_AddVehicleResponse_"}, {"$ref": "#/components/schemas/AsyncResponse_Policy_"}, {"$ref": "#/components/schemas/AsyncResponse_DraftPolicy_"}, {"$ref": "#/components/schemas/AsyncResponse_DraftPolicyList_"}, {"$ref": "#/components/schemas/AsyncResponse_Driver_"}, {"$ref": "#/components/schemas/AsyncResponse_DriverList_"}, {"$ref": "#/components/schemas/AsyncResponse_IssuePolicyResponse_"}, {"$ref": "#/components/schemas/AsyncResponse_NoneType_"}, {"$ref": "#/components/schemas/AsyncResponse_RemoveDriverResponse_"}, {"$ref": "#/components/schemas/AsyncResponse_RemoveVehicleResponse_"}, {"$ref": "#/components/schemas/AsyncResponse_SwapVehicleResponse_"}, {"$ref": "#/components/schemas/AsyncResponse_Vehicle_"}, {"$ref": "#/components/schemas/AsyncResponse_VehicleList_"}], "title": "Response Async Jobs-Get Job"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AddDriverResponse": {"properties": {"added_driver": {"$ref": "#/components/schemas/Driver"}, "policy_review": {"$ref": "#/components/schemas/PolicyReview"}}, "type": "object", "required": ["added_driver", "policy_review"], "title": "AddDriverResponse"}, "AddVehicleResponse": {"properties": {"added_vehicle": {"$ref": "#/components/schemas/Vehicle"}, "policy_review": {"$ref": "#/components/schemas/PolicyReview"}}, "type": "object", "required": ["added_vehicle", "policy_review"], "title": "AddVehicleResponse"}, "Address": {"properties": {"address_line_1": {"type": "string", "title": "Address Line 1", "examples": ["123 Main St"]}, "address_line_2": {"type": "string", "title": "Address Line 2", "examples": ["Suite 502"]}, "city": {"type": "string", "title": "City", "examples": ["Toronto"]}, "province": {"$ref": "#/components/schemas/Province"}, "postal_code": {"type": "string", "title": "Postal Code", "examples": ["H0H 0H0"]}, "country": {"$ref": "#/components/schemas/CountryCode"}}, "type": "object", "required": ["address_line_1", "address_line_2", "city", "province", "postal_code", "country"], "title": "Address"}, "AsyncError": {"properties": {"message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "AsyncError"}, "AsyncResponse_AddDriverResponse_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/AddDriverResponse", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[AddDriverResponse]"}, "AsyncResponse_AddVehicleResponse_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/AddVehicleResponse", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[AddVehicleResponse]"}, "AsyncResponse_DraftPolicyList_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/DraftPolicyList", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[DraftPolicyList]"}, "AsyncResponse_DraftPolicy_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/DraftPolicy", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[DraftPolicy]"}, "AsyncResponse_DriverList_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/DriverList", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[DriverList]"}, "AsyncResponse_Driver_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/Driver", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[Driver]"}, "AsyncResponse_IssuePolicyResponse_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/IssuePolicyResponse", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[IssuePolicyResponse]"}, "AsyncResponse_NoneType_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[NoneType]"}, "AsyncResponse_PolicyBillingDetails_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/PolicyBillingDetails", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[PolicyBillingDetails]"}, "AsyncResponse_Policy_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/Policy", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[Policy]"}, "AsyncResponse_RemoveDriverResponse_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/RemoveDriverResponse", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[RemoveDriverResponse]"}, "AsyncResponse_RemoveVehicleResponse_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/RemoveVehicleResponse", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[RemoveVehicleResponse]"}, "AsyncResponse_SwapVehicleResponse_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/SwapVehicleResponse", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[SwapVehicleResponse]"}, "AsyncResponse_VehicleList_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/VehicleList", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[VehicleList]"}, "AsyncResponse_Vehicle_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/Vehicle", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[Vehicle]"}, "BillingMethod": {"type": "string", "enum": ["DIRECT_BILL"], "const": "DIRECT_BILL", "title": "BillingMethod"}, "Carrier": {"properties": {"id": {"type": "integer", "title": "Id"}, "name": {"type": "string", "title": "Name", "examples": ["Example Carrier"]}}, "type": "object", "required": ["id", "name"], "title": "Carrier"}, "CarrierList": {"properties": {"first": {"type": "integer", "title": "First", "description": "The number of items to return starting after the provided `offset`. Must be greater than or equal to 0.", "ge": 0}, "offset": {"type": "integer", "title": "Offset", "description": "The number of items to skip. Must be greater than or equal to 0. For example, if `first` is `10` and `offset` is `0` the first 10 results will be returned. If `first` is `10` and offset is `10` the next 10 results will be returned (essentially the second page).", "ge": 0}, "has_next_page": {"type": "boolean", "title": "Has Next Page", "default": false}, "has_previous_page": {"type": "boolean", "title": "Has Previous Page", "default": false}, "total_count": {"type": "integer", "minimum": 0.0, "title": "Total Count", "description": "The total number of results available in the entire dataset, which may be greater than the number of results returned. Must be greater than or equal to 0."}, "results": {"items": {"$ref": "#/components/schemas/Carrier"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["total_count", "results"], "title": "CarrierList"}, "ClaimsAndRiskAnalysis": {"properties": {"existing_policy_claims": {"items": {"$ref": "#/components/schemas/PolicyClaim"}, "type": "array", "title": "Existing Policy Claims"}, "underwriting_issues": {"items": {"$ref": "#/components/schemas/UnderwritingIssue"}, "type": "array", "title": "Underwriting Issues", "examples": [[{"message": "Applicant has a history of multiple claims in the past five years."}, {"message": "Vehicle has significant modifications that increase risk."}]]}}, "type": "object", "required": ["existing_policy_claims", "underwriting_issues"], "title": "ClaimsAndRiskAnalysis"}, "CountryCode": {"type": "string", "enum": ["CA", "US"], "title": "CountryCode"}, "CreateDriverInput": {"properties": {"policy": {"$ref": "#/components/schemas/PolicyChangeInput"}, "driver": {"$ref": "#/components/schemas/DriverDetailsInput"}, "vehicle_assignments": {"items": {"$ref": "#/components/schemas/VehicleAssignmentInput"}, "type": "array", "title": "Vehicle Assignments", "description": "The vehicles to assign the driver to and which type of operator they are (primary, secondary, etc.)."}}, "type": "object", "required": ["driver", "vehicle_assignments"], "title": "CreateDriverInput"}, "CreateVehicleForSwapInput": {"properties": {"vehicle": {"$ref": "#/components/schemas/VehicleDetailsInput"}, "driver_license_number": {"type": "string", "title": "Driver License Number"}, "driver_type_of_operator": {"$ref": "#/components/schemas/VehicleDriverTypeOfOperator"}, "coverage": {"$ref": "#/components/schemas/VehicleCoverage"}}, "type": "object", "required": ["vehicle", "driver_license_number", "driver_type_of_operator", "coverage"], "title": "CreateVehicleForSwapInput"}, "CreateVehicleInput": {"properties": {"additional_drivers": {"items": {"$ref": "#/components/schemas/DriverDetailsInput"}, "type": "array", "title": "Additional Drivers", "description": "An list of new drivers to add to the policy. If no new drivers are being added, use an empty list."}, "vehicle": {"$ref": "#/components/schemas/VehicleDetailsInput"}, "driver_assignments_for_new_vehicle": {"items": {"$ref": "#/components/schemas/DriverAssignmentInput"}, "type": "array", "minItems": 1, "title": "Driver Assignments For New Vehicle", "description": "A list of vehicle VINs and the drivers associated to the newly added vehicle. You must specify at least 1 driver assignment."}, "coverage": {"$ref": "#/components/schemas/VehicleCoverage"}}, "type": "object", "required": ["additional_drivers", "vehicle", "driver_assignments_for_new_vehicle", "coverage"], "title": "CreateVehicleInput"}, "CreateVehicleRequestInput": {"properties": {"policy": {"$ref": "#/components/schemas/PolicyChangeInput"}, "new_vehicle": {"$ref": "#/components/schemas/CreateVehicleInput"}}, "type": "object", "required": ["new_vehicle"], "title": "CreateVehicleRequestInput"}, "DraftPolicy": {"properties": {"id": {"type": "string", "title": "Id"}, "carrier_id": {"type": "integer", "title": "Carrier Id"}, "policy_id": {"type": "string", "title": "Policy Id", "examples": ["A12-345B-678C"]}, "draft_id": {"type": "string", "title": "Draft Id"}}, "type": "object", "required": ["id", "carrier_id", "policy_id", "draft_id"], "title": "DraftPolicy"}, "DraftPolicyList": {"properties": {"first": {"type": "integer", "title": "First", "description": "The number of items to return starting after the provided `offset`. Must be greater than or equal to 0.", "ge": 0}, "offset": {"type": "integer", "title": "Offset", "description": "The number of items to skip. Must be greater than or equal to 0. For example, if `first` is `10` and `offset` is `0` the first 10 results will be returned. If `first` is `10` and offset is `10` the next 10 results will be returned (essentially the second page).", "ge": 0}, "has_next_page": {"type": "boolean", "title": "Has Next Page", "default": false}, "has_previous_page": {"type": "boolean", "title": "Has Previous Page", "default": false}, "total_count": {"type": "integer", "minimum": 0.0, "title": "Total Count", "description": "The total number of results available in the entire dataset, which may be greater than the number of results returned. Must be greater than or equal to 0."}, "results": {"items": {"$ref": "#/components/schemas/DraftPolicy"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["total_count", "results"], "title": "DraftPolicyList"}, "Driver": {"properties": {"first_name": {"type": "string", "title": "First Name", "examples": ["John"]}, "last_name": {"type": "string", "title": "Last Name", "examples": ["Smith"]}, "drivers_license": {"$ref": "#/components/schemas/DriversLicense"}, "date_first_insured_by_previous_carrier": {"type": "string", "format": "date", "title": "Date First Insured By Previous Carrier", "examples": ["2023-07-28"]}, "date_of_birth": {"type": "string", "format": "date", "title": "Date Of Birth", "examples": ["1994-07-28"]}, "marital_status": {"$ref": "#/components/schemas/MaritalStatus"}, "gender": {"$ref": "#/components/schemas/Gender"}, "primary_phone": {"type": "string", "title": "Primary Phone", "examples": ["647-555-5555"]}, "home_phone": {"type": "string", "title": "Home Phone", "examples": ["647-555-5555"]}, "mobile_phone": {"type": "string", "title": "Mobile Phone", "examples": ["647-555-5555"]}, "primary_email": {"type": "string", "format": "email", "title": "Primary Email", "examples": ["john.smith@example.com"]}, "personal_auto_insured_elsewhere": {"type": "boolean", "title": "Personal Auto Insured Elsewhere"}, "motorcycle_insured_elsewhere": {"type": "boolean", "title": "Motorcycle Insured Elsewhere"}, "commercial_driver_only": {"type": "boolean", "title": "Commercial Driver Only"}, "excluded": {"type": "boolean", "title": "Excluded"}, "qualify_for_retiree_discount": {"type": "boolean", "title": "Qualify For Retiree Discount"}, "away_at_school": {"type": "boolean", "title": "Away At School"}, "full_time_farmer": {"type": "boolean", "title": "Full Time Farmer"}, "prior_insurance_in_canada": {"$ref": "#/components/schemas/PriorInsurance", "title": "Prior Insurance In Canada"}, "date_of_full_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Full Licence", "examples": ["2023-07-28"]}, "date_of_probationary_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Probationary Licence", "examples": ["2022-07-28"]}, "date_of_learners_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Learners Licence", "examples": ["2021-07-28"]}, "date_first_insured_in_canada": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date First Insured In Canada", "examples": ["2021-07-28"]}, "driver_training_completed": {"type": "boolean", "title": "Driver Training Completed"}, "convictions": {"type": "boolean", "title": "Convictions"}, "suspensions": {"type": "boolean", "title": "Suspensions"}}, "type": "object", "required": ["first_name", "last_name", "drivers_license", "date_of_birth", "marital_status", "commercial_driver_only", "excluded", "qualify_for_retiree_discount", "away_at_school", "full_time_farmer", "driver_training_completed", "convictions", "suspensions"], "title": "Driver"}, "DriverAssignmentInput": {"properties": {"driver_license_number": {"type": "string", "title": "Driver License Number"}, "driver_type_of_operator": {"$ref": "#/components/schemas/VehicleDriverTypeOfOperator"}}, "type": "object", "required": ["driver_license_number", "driver_type_of_operator"], "title": "DriverAssignmentInput"}, "DriverDetailsInput": {"properties": {"first_name": {"type": "string", "title": "First Name", "examples": ["John"]}, "last_name": {"type": "string", "title": "Last Name", "examples": ["Smith"]}, "date_of_birth": {"type": "string", "format": "date", "title": "Date Of Birth", "examples": ["1994-07-28"]}, "marital_status": {"$ref": "#/components/schemas/MaritalStatus"}, "gender": {"$ref": "#/components/schemas/Gender"}, "drivers_license": {"$ref": "#/components/schemas/DriversLicenseInput"}, "driver_training_completed": {"type": "boolean", "title": "Driver Training Completed"}, "date_first_insured_in_canada": {"type": "string", "format": "date", "title": "Date First Insured In Canada", "examples": ["2021-07-28"]}, "prior_insurance_in_canada": {"$ref": "#/components/schemas/PriorInsurance", "title": "Prior Insurance In Canada"}, "date_of_full_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Full Licence", "description": "The date the full license was first obtained (e.g. `G`). Required when providing a full license class (`DRIVERS_LICENSE_CLASS_VALUE_A`, `DRIVERS_LICENSE_CLASS_VALUE_B`, `DRIVERS_LICENSE_CLASS_VALUE_C`, `DRIVERS_LICENSE_CLASS_VALUE_D`, `DRIVERS_LICENSE_CLASS_VALUE_E`, `DRIVERS_LICENSE_CLASS_VALUE_F`, `DRIVERS_LICENSE_CLASS_VALUE_G`).", "examples": ["2023-07-28"]}, "date_of_probationary_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Probationary Licence", "description": "The date the probationary license was first obtained (e.g. `G2`). Required when providing a probationary license class (`DRIVERS_LICENSE_CLASS_VALUE_G2`).", "examples": ["2022-07-28"]}, "date_of_learners_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Learners Licence", "description": "The date the probationary license was first obtained (e.g. `G1`). Required when providing a learners license class (`DRIVERS_LICENSE_CLASS_VALUE_G1`).", "examples": ["2021-07-28"]}}, "type": "object", "required": ["first_name", "last_name", "date_of_birth", "marital_status", "gender", "drivers_license", "driver_training_completed", "date_first_insured_in_canada"], "title": "DriverDetailsInput"}, "DriverList": {"properties": {"first": {"type": "integer", "title": "First", "description": "The number of items to return starting after the provided `offset`. Must be greater than or equal to 0.", "ge": 0}, "offset": {"type": "integer", "title": "Offset", "description": "The number of items to skip. Must be greater than or equal to 0. For example, if `first` is `10` and `offset` is `0` the first 10 results will be returned. If `first` is `10` and offset is `10` the next 10 results will be returned (essentially the second page).", "ge": 0}, "has_next_page": {"type": "boolean", "title": "Has Next Page", "default": false}, "has_previous_page": {"type": "boolean", "title": "Has Previous Page", "default": false}, "total_count": {"type": "integer", "minimum": 0.0, "title": "Total Count", "description": "The total number of results available in the entire dataset, which may be greater than the number of results returned. Must be greater than or equal to 0."}, "results": {"items": {"$ref": "#/components/schemas/Driver"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["total_count", "results"], "title": "DriverList"}, "DriversLicense": {"properties": {"number": {"type": "string", "title": "Number", "examples": ["U5146-37118-09374"]}, "license_class": {"$ref": "#/components/schemas/DriversLicenseClass", "title": "License Class"}, "province": {"$ref": "#/components/schemas/Province"}, "status": {"$ref": "#/components/schemas/DriversLicenseStatus", "title": "Status"}}, "type": "object", "title": "DriversLicense"}, "DriversLicenseClass": {"type": "string", "enum": ["DRIVERS_LICENSE_CLASS_VALUE_G1", "DRIVERS_LICENSE_CLASS_VALUE_G2", "DRIVERS_LICENSE_CLASS_VALUE_G", "DRIVERS_LICENSE_CLASS_VALUE_A", "DRIVERS_LICENSE_CLASS_VALUE_B", "DRIVERS_LICENSE_CLASS_VALUE_C", "DRIVERS_LICENSE_CLASS_VALUE_D", "DRIVERS_LICENSE_CLASS_VALUE_E", "DRIVERS_LICENSE_CLASS_VALUE_F"], "title": "DriversLicenseClass"}, "DriversLicenseInput": {"properties": {"number": {"type": "string", "title": "Number", "examples": ["U5146-37118-09374"]}, "license_class": {"$ref": "#/components/schemas/DriversLicenseClass"}, "province": {"$ref": "#/components/schemas/DriversLicenseProvinceInput"}}, "type": "object", "required": ["number", "license_class", "province"], "title": "DriversLicenseInput"}, "DriversLicenseProvinceInput": {"type": "string", "enum": ["ON"], "const": "ON", "title": "DriversLicenseProvinceInput"}, "DriversLicenseStatus": {"type": "string", "enum": ["DRIVERS_LICENSE_STATUS_LICENSED", "DRIVERS_LICENSE_STATUS_UNLICENSED", "DRIVERS_LICENSE_STATUS_SUSPENDED"], "title": "DriversLicenseStatus"}, "Error": {"properties": {"message": {"type": "string", "title": "Message"}, "error_code": {"type": "integer", "title": "Error Code"}}, "type": "object", "required": ["message", "error_code"], "title": "Error"}, "Gender": {"type": "string", "enum": ["GENDER_VALUE_MALE", "GENDER_VALUE_FEMALE", "GENDER_VALUE_X"], "title": "Gender"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "IssuePolicyResponse": {"properties": {"policy_review": {"$ref": "#/components/schemas/PolicyReview"}}, "type": "object", "required": ["policy_review"], "title": "IssuePolicyResponse"}, "JobStatus": {"type": "string", "enum": ["INITIALIZING", "IN_PROGRESS", "FAILED", "COMPLETED"], "title": "JobStatus"}, "LiabilityForDamageToNonOwnedAutomobiles27": {"type": "string", "enum": ["LIABILITY_FOR_DAMAGE_TO_NON_OWNED_AUTOMOBILES_VALUE_40_000", "LIABILITY_FOR_DAMAGE_TO_NON_OWNED_AUTOMOBILES_VALUE_50_000", "LIABILITY_FOR_DAMAGE_TO_NON_OWNED_AUTOMOBILES_VALUE_75_000", "LIABILITY_FOR_DAMAGE_TO_NON_OWNED_AUTOMOBILES_VALUE_100_000"], "title": "LiabilityForDamageToNonOwnedAutomobiles27"}, "MaritalStatus": {"type": "string", "enum": ["MARTIAL_STATUS_VALUE_SINGLE", "MARTIAL_STATUS_VALUE_MARRIED", "MARTIAL_STATUS_VALUE_COMMON-LAW", "MARTIAL_STATUS_VALUE_SEPARATED", "MARTIAL_STATUS_VALUE_DIVORCED"], "title": "MaritalStatus"}, "Payment": {"properties": {"payment_plan_name": {"type": "string", "title": "Payment Plan Name", "examples": ["Quarterly Saver Plus, 4 Equal Payments", "Flex Premium 5%, 11 Monthly Installments"]}, "payment_method": {"type": "string", "title": "Payment Method", "examples": ["Pre-authorized"]}, "payment_instrument_name": {"type": "string", "title": "Payment Instrument Name", "examples": ["Cash", "Check", "Credit Card"]}, "credit_card_number": {"type": "string", "title": "Credit Card Number", "examples": ["4242424242424242"]}, "expiry_date_mmyy": {"type": "string", "title": "Expiry Date Mmyy", "examples": ["07/23"]}, "payments_preview": {"items": {"$ref": "#/components/schemas/PaymentPreviewItem"}, "type": "array", "title": "Payments Preview", "examples": [[{"amount": "123.12", "date": "2023-07-28"}, {"amount": "140.56", "date": "2023-08-28"}, {"amount": "140.56", "date": "2023-09-28"}]]}}, "type": "object", "required": ["payment_plan_name", "payment_method", "payment_instrument_name", "credit_card_number", "expiry_date_mmyy", "payments_preview"], "title": "Payment"}, "PaymentDetailsBankAccount": {"properties": {"payment_type": {"type": "string", "enum": ["BANK_ACCOUNT"], "const": "BANK_ACCOUNT", "title": "Payment Type", "default": "BANK_ACCOUNT"}, "last_4_digits": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last 4 Digits", "description": "The last couple of digits of the account number.", "examples": ["1234"]}, "institution_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Institution Number", "description": "The institution number of the bank account. Typically 3 digits, padded with zeroes.", "examples": ["001"]}, "transit_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Transit Number", "description": "The transit number of the bank account. Typically 5 digits, padded with zeroes.", "examples": ["01234"]}, "account_holder_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Account Holder Name", "description": "The name of the bank account holder", "examples": ["John Smith"]}}, "type": "object", "required": ["last_4_digits", "institution_number", "transit_number", "account_holder_name"], "title": "PaymentDetailsBankAccount", "description": "Payment details specific to a bank account."}, "PaymentDetailsCreditCard": {"properties": {"payment_type": {"type": "string", "enum": ["CREDIT_CARD"], "const": "CREDIT_CARD", "title": "Payment Type", "default": "CREDIT_CARD"}, "last_4_digits": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Last 4 Digits", "description": "The last 4 digits of the credit card.", "examples": ["4242"]}, "expiry_date_mmyy": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Expiry Date Mmyy", "description": "The expiry date of the credit card in MM/YY format including the slash. Example: 05/29", "examples": ["07/23"]}}, "type": "object", "required": ["last_4_digits", "expiry_date_mmyy"], "title": "PaymentDetailsCreditCard", "description": "Payment details specific to a credit card."}, "PaymentFrequency": {"type": "string", "enum": ["MONTHLY", "ANNUALLY"], "title": "PaymentFrequency", "description": "How often a payment occurs (eg. monthly, annually).\n\nGore 'One Pay Payment Plan' policies are treated as annual payments."}, "PaymentInvoiceStatus": {"type": "string", "enum": ["DUE", "BILLED", "PLANNED"], "title": "PaymentInvoiceStatus"}, "PaymentPaidStatus": {"type": "string", "enum": ["FULLY_PAID", "PARTIALLY_PAID", "UNPAID"], "title": "PaymentPaidStatus"}, "PaymentPreviewItem": {"properties": {"date": {"type": "string", "format": "date", "title": "Date", "examples": ["2023-07-28"]}, "amount": {"type": "string", "title": "Amount", "description": "The dollar amount to be paid on the associated date.", "examples": ["123.12"]}}, "type": "object", "required": ["date", "amount"], "title": "PaymentPreviewItem"}, "PaymentScheduleRecord": {"properties": {"invoice_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Invoice Date", "description": "The date the invoice was created.", "examples": ["2023-07-28"]}, "due_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Due Date", "description": "The date the invoice is due.", "examples": ["2023-08-28"]}, "invoice_status": {"anyOf": [{"$ref": "#/components/schemas/PaymentInvoiceStatus"}, {"type": "null"}], "description": "The normalized status of whether the invoice has been issued or not."}, "amount_total": {"type": "string", "title": "Amount Total", "description": "The total amount required to be paid for the invoice.", "examples": ["123.12"]}, "amount_due": {"type": "string", "title": "Amount Due", "description": "The total amount required to be paid before the specified due date. Also known as the billed amount.", "examples": ["123.12"]}, "amount_past_due": {"type": "string", "title": "Amount Past Due", "description": "The total amount that has not been paid before the due date.", "examples": ["123.12"]}, "amount_paid": {"type": "string", "title": "Amount Paid", "description": "The total amount that has been paid.", "examples": ["123.12"]}, "paid_status": {"anyOf": [{"$ref": "#/components/schemas/PaymentPaidStatus"}, {"type": "null"}], "description": "The normalized status of whether a payment has been made or not."}}, "type": "object", "required": ["invoice_date", "due_date", "invoice_status", "amount_total", "amount_due", "amount_past_due", "amount_paid", "paid_status"], "title": "PaymentScheduleRecord"}, "PaymentType": {"type": "string", "enum": ["CREDIT_CARD", "BANK_ACCOUNT", "INVOICE"], "title": "PaymentType", "description": "How a payment is made (eg. credit card, bank account)."}, "Policy": {"properties": {"policy_number": {"type": "string", "title": "Policy Number", "examples": ["A12-345B-678C"]}, "effective_date": {"type": "string", "format": "date", "title": "Effective Date", "examples": ["2023-07-28"]}, "expiry_date": {"type": "string", "format": "date", "title": "Expiry Date", "examples": ["2024-07-28"]}, "address": {"anyOf": [{"$ref": "#/components/schemas/Address"}, {"type": "null"}]}, "annual_premium_current": {"type": "string", "title": "Annual Premium Current", "examples": ["123.12"]}}, "type": "object", "required": ["policy_number", "effective_date", "expiry_date", "address", "annual_premium_current"], "title": "Policy"}, "PolicyBillingDetails": {"properties": {"billing_method": {"anyOf": [{"$ref": "#/components/schemas/BillingMethod"}, {"type": "null"}]}, "payment_frequency": {"anyOf": [{"$ref": "#/components/schemas/PaymentFrequency"}, {"type": "null"}], "description": "How often a payment occurs (eg. monthly, annually). Gore 'One Pay Payment Plan' policies are treated as annual payments."}, "payment_withdrawal_day": {"anyOf": [{"type": "integer", "maximum": 28.0, "minimum": 1.0}, {"type": "null"}], "title": "Payment Withdrawal Day", "description": "The day of the month when a payment is withdrawn (eg. `14` would indicate payments are withdrawn on the 14th of every month). Must be between 1 and 28.", "examples": [14]}, "payment_type": {"anyOf": [{"$ref": "#/components/schemas/PaymentType"}, {"type": "null"}], "description": "The normalized type of payment (eg. credit card, bank account).", "examples": ["Pre-authorized, Credit Card"]}, "policy_periods": {"items": {"$ref": "#/components/schemas/PolicyPeriod"}, "type": "array", "title": "Policy Periods", "description": "A list of periods in which the policy was active."}, "payment_schedule": {"items": {"$ref": "#/components/schemas/PaymentScheduleRecord"}, "type": "array", "title": "Payment Schedule", "description": "Historical, current and future payment schedule for the policy."}, "payment_details": {"anyOf": [{"$ref": "#/components/schemas/PaymentDetailsCreditCard"}, {"$ref": "#/components/schemas/PaymentDetailsBankAccount"}, {"type": "null"}], "title": "Payment Details", "description": "Details about the payment method used for the policy (eg. credit card, bank account)."}}, "type": "object", "required": ["billing_method", "payment_frequency", "payment_withdrawal_day", "payment_type", "policy_periods", "payment_schedule", "payment_details"], "title": "PolicyBillingDetails"}, "PolicyChangeInput": {"properties": {"effective_date": {"type": "string", "format": "date", "title": "Effective Date", "examples": ["2023-07-28"]}}, "type": "object", "title": "PolicyChangeInput"}, "PolicyClaim": {"properties": {"id": {"type": "string", "title": "Id"}}, "type": "object", "required": ["id"], "title": "PolicyClaim"}, "PolicyPeriod": {"properties": {"effective_date": {"type": "string", "format": "date", "title": "Effective Date", "examples": ["2023-07-28"]}, "expiration_date": {"type": "string", "format": "date", "title": "Expiration Date", "examples": ["2024-07-28"]}}, "type": "object", "required": ["effective_date", "expiration_date"], "title": "PolicyPeriod"}, "PolicyReview": {"properties": {"policy_draft_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Policy Draft Id", "examples": ["001234567890"]}, "claims_and_risk_analysis": {"$ref": "#/components/schemas/ClaimsAndRiskAnalysis"}, "quote": {"$ref": "#/components/schemas/Quote"}, "payment": {"$ref": "#/components/schemas/Payment"}}, "type": "object", "required": ["policy_draft_id", "claims_and_risk_analysis", "quote", "payment"], "title": "PolicyReview"}, "PolicyStatus": {"type": "string", "enum": ["POLICY_STATUS_VALUE_CANCELLATION_BASED_ON_UNDERWRITING", "POLICY_STATUS_VALUE_CANCELLATION_FOR_OTHER_REASON", "POLICY_STATUS_VALUE_CANCELLATION_FOR_POLICY_LAPSE", "POLICY_STATUS_VALUE_CANCELLATION_INSURED_REQUEST", "POLICY_STATUS_VALUE_CANCELLATION_OF_NEW_POLICY", "POLICY_STATUS_VALUE_CANCELLATION_OF_RENEWAL", "POLICY_STATUS_VALUE_CANCELLED_FOR_INSURANCE_FRAUD", "POLICY_STATUS_VALUE_CANCELLED_FOR_MISREPRESENTATION", "POLICY_STATUS_VALUE_CANCELLED_FOR_NON_PAYMENT", "POLICY_STATUS_VALUE_MID_TERM_CANCELLATION", "POLICY_STATUS_VALUE_MOVING_INTERNAL", "POLICY_STATUS_VALUE_REINSTATEMENT_OF_TEMPORARY_SUSPENSION", "POLICY_STATUS_VALUE_RENEWAL", "POLICY_STATUS_VALUE_RENEWAL_TERM_CANCELLATION_DUE_TO_CURRENT_TERM_CANCELLATION", "POLICY_STATUS_VALUE_TEMPORARY_SUSPENSION", "POLICY_STATUS_VALUE_TOTAL_LOSS"], "title": "PolicyStatus"}, "PriorInsurance": {"properties": {"policy_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Policy Number", "examples": ["A12-345B-678C"]}, "policy_status": {"$ref": "#/components/schemas/PolicyStatus"}, "policy_expiry_date": {"type": "string", "format": "date", "title": "Policy Expiry Date", "examples": ["2023-07-28"]}}, "type": "object", "required": ["policy_status", "policy_expiry_date"], "title": "PriorInsurance"}, "Province": {"type": "string", "enum": ["AB", "BC", "MB", "NB", "NL", "NS", "ON", "PE", "QC", "SK", "NT", "NU", "YT"], "title": "Province"}, "Quote": {"properties": {"policy_number": {"type": "string", "title": "Policy Number", "examples": ["A12-345B-678C"]}, "policy_period": {"$ref": "#/components/schemas/PolicyPeriod"}, "primary_named_insured": {"type": "string", "title": "Primary Named Insured", "examples": ["John Smith"]}, "mailing_address": {"anyOf": [{"$ref": "#/components/schemas/Address"}, {"type": "null"}]}, "broker_code_legal_name": {"type": "string", "title": "Broker Code Legal Name"}, "transaction_effective_date": {"type": "string", "format": "date", "title": "Transaction Effective Date", "examples": ["2023-07-28"]}, "total_charged_premium": {"type": "string", "title": "Total Charged Premium", "description": "The total amount charged for the policy, excluding taxes. Must be greater than or equal to 0.", "examples": ["123.12"]}, "total_cost_including_taxes": {"type": "string", "title": "Total Cost Including Taxes", "description": "The total amount charged for the policy, including taxes. Must be greater than or equal to 0.", "examples": ["234.56"]}, "total_transaction_premium": {"type": "string", "title": "Total Transaction Premium", "description": "The total difference in price associated with this quote change. Positive numbers indicate an increase in price, negative numbers indicate a decrease in price.", "examples": ["56.78"]}}, "type": "object", "required": ["policy_number", "policy_period", "primary_named_insured", "broker_code_legal_name", "transaction_effective_date", "total_charged_premium", "total_cost_including_taxes", "total_transaction_premium"], "title": "Quote"}, "RemoveDriverResponse": {"properties": {"removed_driver": {"$ref": "#/components/schemas/Driver"}, "policy_review": {"$ref": "#/components/schemas/PolicyReview"}}, "type": "object", "required": ["removed_driver", "policy_review"], "title": "RemoveDriverResponse"}, "RemoveVehicleResponse": {"properties": {"removed_vehicle": {"$ref": "#/components/schemas/Vehicle"}, "policy_review": {"$ref": "#/components/schemas/PolicyReview"}}, "type": "object", "required": ["removed_vehicle", "policy_review"], "title": "RemoveVehicleResponse"}, "SwapVehicleInput": {"properties": {"policy": {"$ref": "#/components/schemas/PolicyChangeInput"}, "new_vehicle": {"$ref": "#/components/schemas/CreateVehicleForSwapInput"}}, "type": "object", "required": ["new_vehicle"], "title": "SwapVehicleInput"}, "SwapVehicleResponse": {"properties": {"added_vehicle": {"$ref": "#/components/schemas/Vehicle"}, "removed_vehicle": {"$ref": "#/components/schemas/Vehicle"}, "policy_review": {"$ref": "#/components/schemas/PolicyReview"}}, "type": "object", "required": ["added_vehicle", "removed_vehicle", "policy_review"], "title": "SwapVehicleResponse"}, "TransportationReplacementCoverage20": {"type": "string", "enum": ["TRANSPORTATION_REPLACEMENT_VALUE_1500", "TRANSPORTATION_REPLACEMENT_VALUE_3000", "TRANSPORTATION_REPLACEMENT_VALUE_5000"], "title": "TransportationReplacementCoverage20"}, "UnderwritingIssue": {"properties": {"message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "UnderwritingIssue"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "Vehicle": {"properties": {"vin": {"type": "string", "title": "Vin", "description": "Vehicle Identification Number", "examples": ["5FNRL5H30GB027317"]}, "abs": {"type": "string", "title": "Abs"}, "model_year": {"type": "string", "title": "Model Year", "description": "Model year of the vehicle in YYYY format"}, "make": {"type": "string", "title": "Make"}, "model": {"type": "string", "title": "Model"}, "vicc_vehicle_code": {"type": "string", "title": "Vicc Vehicle Code"}, "ownership": {"$ref": "#/components/schemas/VehicleOwnership", "title": "Ownership"}, "condition_purchased": {"$ref": "#/components/schemas/VehicleCondition", "title": "Condition Purchased"}, "date_purchased": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Purchased", "examples": ["2023-07-28"]}, "appraisal_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Appraisal Date", "examples": ["2023-07-28"]}, "annual_driving_distance": {"type": "integer", "minimum": 0.0, "title": "Annual Driving Distance", "description": "The total distance driven annually in kilometers. Must be greater than or equal to 0.", "examples": ["10000"]}, "km_at_purchase": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Km At Purchase", "description": "The number of kilometers the vehicle had when purchased. Must be greater than or equal to 0.", "examples": ["100000"]}, "stated_value": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Stated Value", "description": "The dollar value of the vehicle in its current condition. Must be greater than or equal to 0.", "examples": ["40000"]}, "vehicle_cost": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Vehicle Cost", "examples": ["70000"]}, "one_way_commute_distance": {"type": "integer", "minimum": 0.0, "title": "One Way Commute Distance", "description": "The distance in kilometers for a one-way commute. Must be greater than or equal to 0.", "examples": ["5"]}, "percentage_of_business_use": {"type": "integer", "minimum": 0.0, "title": "Percentage Of Business Use", "description": "The percentage of the vehicle's use that is for business purposes. Must be greater than or equal to 0.", "examples": ["20"]}, "vehicle_used_for_farming": {"type": "boolean", "title": "Vehicle Used For Farming", "description": "The vehicle is used mainly on a farm. Vehicles that do not have a valid Insurance Bureau of Canada's car code as found on the IBC Vehicle Information tables will be considered a commercial use vehicle."}, "engine_fuel": {"$ref": "#/components/schemas/VehicleEngineFuel", "title": "Engine Fuel"}, "winter_tires": {"type": "boolean", "title": "Winter Tires"}, "after_market_alarm_type": {"$ref": "#/components/schemas/VehicleAfterMarketAlarmType", "title": "After Market Alarm Type"}, "unrepaired_damaged": {"type": "boolean", "title": "Unrepaired Damaged"}, "garaged_at": {"anyOf": [{"$ref": "#/components/schemas/Address"}, {"type": "null"}]}, "vehicle_modifications_exist": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Vehicle Modifications Exist"}, "vehicle_modifications": {"anyOf": [{"$ref": "#/components/schemas/VehicleModifications"}, {"type": "null"}]}, "does_attached_equipment_type_exist": {"type": "boolean", "title": "Does Attached Equipment Type Exist"}, "is_the_vehicle_rented_or_leased_to_others": {"type": "boolean", "title": "Is The Vehicle Rented Or Leased To Others"}, "does_vehicle_carry_passengers_for_compensation_or_hire": {"type": "boolean", "title": "Does Vehicle Carry Passengers For Compensation Or Hire"}, "does_vehicle_haul_trailer": {"type": "boolean", "title": "Does Vehicle Haul Trailer"}, "does_vehicle_carry_explosives_or_radioactive_material": {"type": "boolean", "title": "Does Vehicle Carry Explosives Or Radioactive Material"}, "tag_device_installed": {"type": "boolean", "title": "Tag Device Installed"}, "pre_existing_damage": {"type": "boolean", "title": "Pre Existing Damage"}}, "type": "object", "required": ["abs", "date_purchased", "annual_driving_distance", "one_way_commute_distance", "percentage_of_business_use", "winter_tires", "unrepaired_damaged"], "title": "Vehicle"}, "VehicleAfterMarketAlarmType": {"type": "string", "enum": ["VEHICLE_AFTER_MARKET_ALARM_TYPE_VALUE_AUDIBLE", "VEHICLE_AFTER_MARKET_ALARM_TYPE_VALUE_IMMOBILE"], "title": "VehicleAfterMarketAlarmType"}, "VehicleAllPerilsAmount": {"type": "string", "enum": ["ALL_PERILS_VALUE_500", "ALL_PERILS_VALUE_1000", "ALL_PERILS_VALUE_1500", "ALL_PERILS_VALUE_2000", "ALL_PERILS_VALUE_2500", "ALL_PERILS_VALUE_5000"], "title": "VehicleAllPerilsAmount"}, "VehicleAssignmentInput": {"properties": {"vin": {"type": "string", "minLength": 1, "title": "Vin", "description": "Vehicle Identification Number of the vehicle to assign the driver to.", "examples": ["5FNRL5H30GB027317"]}, "driver_type_of_operator": {"$ref": "#/components/schemas/VehicleDriverTypeOfOperator"}}, "type": "object", "required": ["vin", "driver_type_of_operator"], "title": "VehicleAssignmentInput"}, "VehicleBodilyInjury": {"type": "string", "enum": ["BODILY_INJURY_VALUE_200_000", "BODILY_INJURY_VALUE_300_000", "BODILY_INJURY_VALUE_500_000", "BODILY_INJURY_VALUE_1_000_000", "BODILY_INJURY_VALUE_2_000_000", "BODILY_INJURY_VALUE_3_000_000", "BODILY_INJURY_VALUE_5_000_000"], "title": "VehicleBodilyInjury"}, "VehicleCombinedCoverage": {"properties": {"transporation_replacement_coverage_limit": {"$ref": "#/components/schemas/TransportationReplacementCoverage20", "title": "Transporation Replacement Coverage Limit"}, "liability_for_damage_to_non_owned_automobiles": {"$ref": "#/components/schemas/LiabilityForDamageToNonOwnedAutomobiles27", "title": "Liability For Damage To Non Owned Automobiles"}}, "type": "object", "title": "VehicleCombinedCoverage"}, "VehicleCondition": {"type": "string", "enum": ["VEHICLE_CONDITION_VALUE_NEW", "VEHICLE_CONDITION_VALUE_USED", "VEHICLE_CONDITION_VALUE_DEMO"], "title": "VehicleCondition"}, "VehicleCoverage": {"properties": {"third_party_liability": {"$ref": "#/components/schemas/VehicleThirdPartyLiability", "examples": ["VEHICLE_THIRD_PARTY_LIABILITY_VALUE_500_000"]}, "direct_compensation_of_property_damage_value": {"$ref": "#/components/schemas/VehicleDirectCompensationOfPropertyDamageOptions", "title": "Direct Compensation Of Property Damage Value"}, "all_perils": {"anyOf": [{"$ref": "#/components/schemas/VehicleAllPerilsAmount"}, {"type": "null"}], "examples": ["ALL_PERILS_VALUE_500"]}, "conviction_rating_protector": {"type": "boolean", "title": "Conviction Rating Protector"}, "roadside_assistance_amount": {"anyOf": [{"type": "number"}, {"type": "string"}], "title": "Roadside Assistance Amount", "examples": ["50.56"], "ge": 0}, "transportation_replacement": {"$ref": "#/components/schemas/VehicleTransportationReplacementDays", "title": "Transportation Replacement"}, "damage_to_non_owned_automobiles": {"type": "boolean", "title": "Damage To Non Owned Automobiles"}, "family_protection": {"type": "boolean", "title": "Family Protection"}, "property_damage_liability": {"type": "boolean", "title": "Property Damage Liability"}, "accident_benefits": {"type": "boolean", "title": "Accident Benefits"}, "uninsured_automobile": {"type": "boolean", "title": "Uninsured Automobile"}, "collision_or_upset": {"type": "boolean", "title": "Collision Or Upset"}, "comprehensive_excluding_collision_or_upset": {"type": "boolean", "title": "Comprehensive Excluding Collision Or Upset"}, "driving_record_protection_endorsement_opcf_321": {"type": "boolean", "title": "Driving Record Protection Endorsement Opcf 321"}, "combined_coverage_opcf_320": {"$ref": "#/components/schemas/VehicleCombinedCoverage", "title": "Combined Coverage Opcf 320"}, "minor_conviction_rating_protector_endorsement_opcf_324": {"type": "boolean", "title": "Minor Conviction Rating Protector Endorsement Opcf 324"}, "bodily_injury": {"$ref": "#/components/schemas/VehicleBodilyInjury", "title": "Bodily Injury"}, "medical_rehabilitation_and_attendant_care": {"type": "boolean", "title": "Medical Rehabilitation And Attendant Care"}, "optional_catastrophic_impairment": {"type": "boolean", "title": "Optional Catastrophic Impairment"}, "specified_perils_excluding_collision_or_upset": {"type": "boolean", "title": "Specified Perils Excluding Collision Or Upset"}, "permission_to_rent_or_lease_automobiles_opcf_5": {"type": "boolean", "title": "Permission To Rent Or Lease Automobiles Opcf 5"}, "agreement_not_to_recover_loss_or_damage_due_to_collision_opcf_49": {"type": "boolean", "title": "Agreement Not To Recover Loss Or Damage Due To Collision Opcf 49"}}, "type": "object", "required": ["third_party_liability", "roadside_assistance_amount"], "title": "VehicleCoverage"}, "VehicleDetailsInput": {"properties": {"vin": {"type": "string", "title": "Vin", "description": "Vehicle Identification Number", "examples": ["5FNRL5H30GB027317"]}, "model_year": {"type": "string", "title": "Model Year", "description": "Model year of the vehicle in YYYY format"}, "make": {"type": "string", "title": "Make"}, "model": {"type": "string", "title": "Model"}, "condition_purchased": {"$ref": "#/components/schemas/VehicleCondition", "title": "Condition Purchased"}, "one_way_commute_distance": {"type": "integer", "minimum": 0.0, "title": "One Way Commute Distance", "description": "The distance in kilometers for a one-way commute. Must be greater than or equal to 0.", "examples": ["5"]}, "annual_driving_distance": {"type": "integer", "minimum": 0.0, "title": "Annual Driving Distance", "description": "The total distance driven annually in kilometers. Must be greater than or equal to 0.", "examples": ["10000"]}, "ownership": {"$ref": "#/components/schemas/VehicleOwnership"}, "vehicle_cost": {"type": "integer", "minimum": 0.0, "title": "Vehicle Cost", "examples": ["70000"]}, "winter_tires": {"type": "boolean", "title": "Winter Tires"}, "after_market_alarm_type": {"$ref": "#/components/schemas/VehicleAfterMarketAlarmType", "title": "After Market Alarm Type"}, "engine_fuel": {"$ref": "#/components/schemas/VehicleEngineFuel", "title": "Engine Fuel"}, "date_purchased": {"type": "string", "format": "date", "title": "Date Purchased"}, "list_price_new": {"type": "integer", "title": "List Price New", "description": "The list price of the vehicle when it was new. Must be greater than or equal to 0.", "examples": ["75000"], "ge": 0}, "tag_device_installed": {"type": "boolean", "title": "Tag Device Installed"}, "appraisal_date": {"type": "string", "format": "date", "title": "Appraisal Date", "examples": ["2023-07-28"]}, "does_attached_equipment_type_exist": {"type": "boolean", "title": "Does Attached Equipment Type Exist"}, "pre_existing_damage": {"type": "boolean", "title": "Pre Existing Damage"}, "km_at_purchase": {"type": "integer", "title": "Km At Purchase", "description": "The number of kilometers the vehicle had when purchased. Must be greater than or equal to 0.", "examples": ["100000"], "ge": 0}, "stated_value": {"type": "integer", "title": "Stated Value", "description": "The dollar value of the vehicle in its current condition. Must be greater than or equal to 0.", "examples": ["40000"], "ge": 0}}, "type": "object", "required": ["one_way_commute_distance", "annual_driving_distance", "ownership", "vehicle_cost", "winter_tires"], "title": "VehicleDetailsInput"}, "VehicleDirectCompensationOfPropertyDamageOptions": {"type": "string", "enum": ["DIRECT_COMPENSATION_OF_PROPERTY_VALUE_0", "DIRECT_COMPENSATION_OF_PROPERTY_VALUE_300", "DIRECT_COMPENSATION_OF_PROPERTY_VALUE_500"], "title": "VehicleDirectCompensationOfPropertyDamageOptions"}, "VehicleDriverTypeOfOperator": {"type": "string", "enum": ["VEHICLE_DRIVER_TYPE_OF_OPERATOR_VALUE_PRIMARY", "VEHICLE_DRIVER_TYPE_OF_OPERATOR_VALUE_SECONDARY", "VEHICLE_DRIVER_TYPE_OF_OPERATOR_VALUE_ISO"], "title": "VehicleDriverTypeOfOperator"}, "VehicleEngineFuel": {"type": "string", "enum": ["VEHICLE_ENGINE_FUEL_VALUE_GAS", "VEHICLE_ENGINE_FUEL_VALUE_ELECTRIC", "VEHICLE_ENGINE_FUEL_VALUE_HYBRID", "VEHICLE_ENGINE_FUEL_VALUE_ALCOHOL", "VEHICLE_ENGINE_FUEL_VALUE_DIESEL", "VEHICLE_ENGINE_FUEL_VALUE_PROPANE"], "title": "VehicleEngineFuel"}, "VehicleList": {"properties": {"first": {"type": "integer", "title": "First", "description": "The number of items to return starting after the provided `offset`. Must be greater than or equal to 0.", "ge": 0}, "offset": {"type": "integer", "title": "Offset", "description": "The number of items to skip. Must be greater than or equal to 0. For example, if `first` is `10` and `offset` is `0` the first 10 results will be returned. If `first` is `10` and offset is `10` the next 10 results will be returned (essentially the second page).", "ge": 0}, "has_next_page": {"type": "boolean", "title": "Has Next Page", "default": false}, "has_previous_page": {"type": "boolean", "title": "Has Previous Page", "default": false}, "total_count": {"type": "integer", "minimum": 0.0, "title": "Total Count", "description": "The total number of results available in the entire dataset, which may be greater than the number of results returned. Must be greater than or equal to 0."}, "results": {"items": {"$ref": "#/components/schemas/Vehicle"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["total_count", "results"], "title": "VehicleList"}, "VehicleModifications": {"type": "string", "enum": ["VEHICLE_MODIFICATION_VALUE_ENGINE_PERFORMANCE_OR_CONFIGURATION", "VEHICLE_MODIFICATION_VALUE_FRAME_ALTERATIONS", "VEHICLE_MODIFICATION_VALUE_NITROUS_OXIDE", "VEHICLE_MODIFICATION_VALUE_OTHER", "VEHICLE_MODIFICATION_VALUE_POWER_INCREASING_EXHAUSTS", "VEHICLE_MODIFICATION_VALUE_SUSPENSION_ALTERATION_EXT", "VEHICLE_MODIFICATION_VALUE_TRANSMISSION_PERFORMANCE_OR_CONFIGURATION"], "title": "VehicleModifications"}, "VehicleOwnership": {"type": "string", "enum": ["VEHICLE_OWNERSHIP_VALUE_OWNED", "VEHICLE_OWNERSHIP_VALUE_LEASED", "VEHICLE_OWNERSHIP_VALUE_FINANCED"], "title": "VehicleOwnership"}, "VehicleThirdPartyLiability": {"type": "string", "enum": ["VEHICLE_THIRD_PARTY_LIABILITY_VALUE_200_000", "VEHICLE_THIRD_PARTY_LIABILITY_VALUE_500_000", "VEHICLE_THIRD_PARTY_LIABILITY_VALUE_1_000_000", "VEHICLE_THIRD_PARTY_LIABILITY_VALUE_2_000_000"], "title": "VehicleThirdPartyLiability"}, "VehicleTransportationReplacementDays": {"type": "string", "enum": ["VEHICLE_TRANSPORATION_REPLACEMENT_VALUE_30_DAYS", "VEHICLE_TRANSPORATION_REPLACEMENT_VALUE_45_DAYS", "VEHICLE_TRANSPORATION_REPLACEMENT_VALUE_60_DAYS"], "title": "VehicleTransportationReplacementDays"}}, "securitySchemes": {"APIKeyHeader": {"type": "apiKey", "description": "The API key given to you by DataBraid to authenticate requests", "in": "header", "name": "X-API-Key"}}}}
