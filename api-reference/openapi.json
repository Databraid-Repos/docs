{"openapi": "3.1.0", "info": {"title": "DataBraid - API", "version": "0.1.0"}, "servers": [{"url": "https://api.databraid.io"}], "paths": {"/api/v0.1/vehicle-lookup/makes": {"get": {"tags": ["vehicle lookup"], "summary": "Get Vehicle Makes", "operationId": "vehicle lookup-get_vehicle_makes", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "make", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The vehicle make (e.g. 'Honda', 'Toyota')", "title": "Make"}, "description": "The vehicle make (e.g. 'Honda', 'Toyota')"}, {"name": "model", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The vehicle model (e.g. 'Camry', 'Civic')", "title": "Model"}, "description": "The vehicle model (e.g. 'Camry', 'Civic')"}, {"name": "year", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "The vehicle year (e.g. 2025)", "title": "Year"}, "description": "The vehicle year (e.g. 2025)"}, {"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "description": "Page number", "default": 1, "title": "Page"}, "description": "Page number"}, {"name": "page_size", "in": "query", "required": false, "schema": {"type": "integer", "description": "Number of results per page (max 100)", "default": 100, "title": "Page Size"}, "description": "Number of results per page (max 100)"}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VehicleLookupMakesList"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/vehicle-lookup/models": {"get": {"tags": ["vehicle lookup"], "summary": "Get Vehicle Models", "operationId": "vehicle lookup-get_vehicle_models", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "make", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The vehicle make (e.g. 'Honda', 'Toyota')", "title": "Make"}, "description": "The vehicle make (e.g. 'Honda', 'Toyota')"}, {"name": "model", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The vehicle model (e.g. 'Camry', 'Civic')", "title": "Model"}, "description": "The vehicle model (e.g. 'Camry', 'Civic')"}, {"name": "year", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "The vehicle year (e.g. 2025)", "title": "Year"}, "description": "The vehicle year (e.g. 2025)"}, {"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "description": "Page number", "default": 1, "title": "Page"}, "description": "Page number"}, {"name": "page_size", "in": "query", "required": false, "schema": {"type": "integer", "description": "Number of results per page (max 100)", "default": 100, "title": "Page Size"}, "description": "Number of results per page (max 100)"}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VehicleLookupModelsList"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/vehicle-lookup/years": {"get": {"tags": ["vehicle lookup"], "summary": "Get Vehicle Model Years", "operationId": "vehicle lookup-get_vehicle_model_years", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "make", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The vehicle make (e.g. 'Honda', 'Toyota')", "title": "Make"}, "description": "The vehicle make (e.g. 'Honda', 'Toyota')"}, {"name": "model", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The vehicle model (e.g. 'Camry', 'Civic')", "title": "Model"}, "description": "The vehicle model (e.g. 'Camry', 'Civic')"}, {"name": "year", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer"}, {"type": "null"}], "description": "The vehicle year (e.g. 2025)", "title": "Year"}, "description": "The vehicle year (e.g. 2025)"}, {"name": "page", "in": "query", "required": false, "schema": {"type": "integer", "description": "Page number", "default": 1, "title": "Page"}, "description": "Page number"}, {"name": "page_size", "in": "query", "required": false, "schema": {"type": "integer", "description": "Number of results per page (max 100)", "default": 100, "title": "Page Size"}, "description": "Number of results per page (max 100)"}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VehicleLookupModelYearsList"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers": {"get": {"tags": ["carriers"], "summary": "Get Carriers", "description": "Return a list of supported carriers based on the provided API key.", "operationId": "carriers-get_carriers", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CarrierList"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/sessions/{session_id}/": {"get": {"tags": ["sessions"], "summary": "Get Session", "operationId": "sessions-get_session", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "session_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Session Id"}}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CarrierPortalSessionDetail"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/billing": {"get": {"tags": ["policies"], "summary": "Get Policy Billing Details", "operationId": "policies-get_policy_billing_details", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/PolicyBillingDetails"}, {"$ref": "#/components/schemas/AsyncResponse_PolicyBillingDetails_"}], "title": "Response Policies-Get Policy Billing Details"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/cancel": {"post": {"tags": ["policies"], "summary": "Cancel Policy", "operationId": "policies-cancel_policy", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CancelPolicyRequest_str_"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CancelPolicyResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/drivers": {"post": {"tags": ["drivers"], "summary": "Add Driver", "operationId": "drivers-add_driver", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateDriverInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/AddDriverResponse"}, {"$ref": "#/components/schemas/AsyncResponse_AddDriverResponse_"}], "title": "Response Drivers-Add Driver"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/vehicles": {"post": {"tags": ["vehicles"], "summary": "Add Vehicle", "operationId": "vehicles-add_vehicle", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateVehicleRequestInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/AddVehicleResponse"}, {"$ref": "#/components/schemas/AsyncResponse_AddVehicleResponse_"}], "title": "Response Vehicles-Add Vehicle"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/vehicles/{vehicle_vin}/swap": {"post": {"tags": ["vehicles"], "summary": "Swap Vehicle", "description": "Swap the vehicle (vehicle_vin) with the provided new vehicle", "operationId": "vehicles-swap_vehicle", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "vehicle_vin", "in": "path", "required": true, "schema": {"type": "string", "title": "Vehicle Vin"}}, {"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SwapVehicleInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/SwapVehicleResponse"}, {"$ref": "#/components/schemas/AsyncResponse_SwapVehicleResponse_"}], "title": "Response Vehicles-Swap Vehicle"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/coverages/modify": {"post": {"summary": "Modify Coverages", "operationId": "modify_coverages", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ModifyCoveragesRequestInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/ModifyCoveragesResponse"}, {"$ref": "#/components/schemas/AsyncResponse_ModifyCoveragesResponse_"}], "title": "Response Modify Coverages"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/jobs/{job_id}": {"get": {"tags": ["async jobs"], "summary": "Get Job", "operationId": "async jobs-get_job", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "job_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Job Id"}}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AsyncResponse_Any_"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/credentials/verify": {"post": {"tags": ["credentials"], "summary": "Verify Credentials", "operationId": "credentials-verify_credentials", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/VerifyRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CredentialResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/credentials": {"post": {"tags": ["credentials"], "summary": "Create Or Update Credentials", "operationId": "credentials-create_or_update_credentials", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateCredentialsRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CredentialResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/credentials/mfa": {"post": {"tags": ["credentials"], "summary": "Submit Mfa", "operationId": "credentials-submit_mfa", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MFARequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CredentialResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/credentials/expire_session": {"post": {"tags": ["credentials"], "summary": "Expire Session", "operationId": "credentials-expire_session", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ExpireSessionRequest"}}}}, "responses": {"204": {"description": "Successful Response"}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/quotes": {"post": {"tags": ["quotes"], "summary": "New Quote", "operationId": "quotes-new_quote", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/NewQuoteRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QuoteResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/quotes/{quote_id}/add-change": {"post": {"tags": ["quotes"], "summary": "Add Change", "operationId": "quotes-add_change", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "quote_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Quote Id"}}, {"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddChangeRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddQuoteChangeResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/quotes/{quote_id}/generate-quote": {"post": {"tags": ["quotes"], "summary": "Generate Quote", "operationId": "quotes-generate_quote", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "quote_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Quote Id"}}, {"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GenerateQuoteResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/quotes/{quote_id}/close": {"post": {"tags": ["quotes"], "summary": "Close Quote", "operationId": "quotes-close_quote", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "quote_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Quote Id"}}, {"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CloseQuoteRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CloseQuoteResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v0.1/carriers/{carrier_id}/policies/{policy_id}/quotes/{quote_id}/edit-quoted-draft": {"post": {"tags": ["quotes"], "summary": "Edit Quoted Draft", "operationId": "quotes-edit_quoted_draft", "security": [{"APIKeyHeader": []}], "parameters": [{"name": "quote_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Quote Id"}}, {"name": "carrier_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Carrier Id"}}, {"name": "policy_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Policy Id"}}, {"name": "is_async", "in": "query", "required": false, "schema": {"type": "boolean", "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned.", "default": false, "title": "Is Async"}, "description": "Set to `true` to perform this operation asynchronously. A response of type `AsyncResponse` will be returned."}, {"name": "callback_url", "in": "query", "required": false, "schema": {"type": "string", "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response.", "title": "Callback Url"}, "description": "A webhook URL to send the response to when the result fails or completes. Sends a `POST` request with the job result as the response."}, {"name": "event-origin", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "description": "The origin domain that triggered this request", "title": "Event-Origin"}, "description": "The origin domain that triggered this request"}, {"name": "aws-secret-arn", "in": "header", "required": true, "schema": {"type": "string", "description": "ARN of the AWS Secrets Manager secret containing the broker credentials", "title": "Aws-Secret-Arn"}, "description": "ARN of the AWS Secrets Manager secret containing the broker credentials"}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EditQuotedDraftRequest"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/EditQuotedDraftResponse"}}}}, "401": {"description": "Unauthorized", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "500": {"description": "Internal Server Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "404": {"description": "Entity Not Found", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Error"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AddChangeRequest": {"properties": {"data": {"oneOf": [{"$ref": "#/components/schemas/AddVehicleOnlyChangeData"}, {"$ref": "#/components/schemas/AssignDriverOnlyChangeData"}, {"$ref": "#/components/schemas/SwapVehicleOnlyChangeData"}, {"$ref": "#/components/schemas/EditDriverOnlyChangeData"}, {"$ref": "#/components/schemas/EditVehicleOnlyChangeData"}, {"$ref": "#/components/schemas/RemoveVehicleOnlyChangeData"}, {"$ref": "#/components/schemas/RemoveDriverOnlyChangeData"}, {"$ref": "#/components/schemas/SetCoveragesOnlyChangeData"}, {"$ref": "#/components/schemas/AddDriverOnlyChangeData"}], "title": "Data", "discriminator": {"propertyName": "change_type", "mapping": {"ADD_DRIVER_DETAILS_ONLY": "#/components/schemas/AddDriverOnlyChangeData", "ADD_VEHICLE_DETAILS_ONLY": "#/components/schemas/AddVehicleOnlyChangeData", "ASSIGN_DRIVER_ONLY": "#/components/schemas/AssignDriverOnlyChangeData", "EDIT_DRIVER_DETAILS_ONLY": "#/components/schemas/EditDriverOnlyChangeData", "EDIT_VEHICLE_DETAILS_ONLY": "#/components/schemas/EditVehicleOnlyChangeData", "REMOVE_DRIVER_ONLY": "#/components/schemas/RemoveDriverOnlyChangeData", "REMOVE_VEHICLE_ONLY": "#/components/schemas/RemoveVehicleOnlyChangeData", "SET_COVERAGES_ONLY": "#/components/schemas/SetCoveragesOnlyChangeData", "SWAP_VEHICLE_DETAILS_ONLY": "#/components/schemas/SwapVehicleOnlyChangeData"}}}}, "type": "object", "required": ["data"], "title": "AddChangeRequest"}, "AddDriverOnlyChangeData": {"properties": {"change_type": {"type": "string", "enum": ["ADD_DRIVER_DETAILS_ONLY"], "const": "ADD_DRIVER_DETAILS_ONLY", "title": "Change Type", "default": "ADD_DRIVER_DETAILS_ONLY"}, "driver_details": {"$ref": "#/components/schemas/DriverDetailsInput"}}, "type": "object", "required": ["driver_details"], "title": "AddDriverOnlyChangeData", "discriminator_value": "ADD_DRIVER_DETAILS_ONLY"}, "AddDriverResponse": {"properties": {"added_driver": {"$ref": "#/components/schemas/Driver"}, "policy_review": {"$ref": "#/components/schemas/PolicyReview"}}, "type": "object", "required": ["added_driver", "policy_review"], "title": "AddDriverResponse"}, "AddQuoteChangeResponse": {"properties": {"draft_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Draft Id"}, "quote_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Quote Id"}, "success": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Success"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}, "error_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Type"}, "portal_messages": {"anyOf": [{"$ref": "#/components/schemas/CarrierPortalMessages"}, {"type": "null"}]}, "added_vehicle": {"anyOf": [{"$ref": "#/components/schemas/AddedVehicle"}, {"type": "null"}]}}, "type": "object", "title": "AddQuoteChangeResponse"}, "AddVehicleOnlyChangeData": {"properties": {"change_type": {"type": "string", "enum": ["ADD_VEHICLE_DETAILS_ONLY"], "const": "ADD_VEHICLE_DETAILS_ONLY", "title": "Change Type", "default": "ADD_VEHICLE_DETAILS_ONLY"}, "vehicle_details": {"$ref": "#/components/schemas/VehicleDetailsInput"}}, "type": "object", "required": ["vehicle_details"], "title": "AddVehicleOnlyChangeData", "discriminator_value": "ADD_VEHICLE_DETAILS_ONLY"}, "AddVehicleResponse": {"properties": {"added_vehicle": {"$ref": "#/components/schemas/Vehicle"}, "policy_review": {"$ref": "#/components/schemas/PolicyReview"}}, "type": "object", "required": ["added_vehicle", "policy_review"], "title": "AddVehicleResponse"}, "AddedVehicle": {"properties": {"make": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Make"}, "model": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Model"}, "year": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Year"}}, "type": "object", "title": "AddedVehicle"}, "AdditionalInterest": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the additional interest party", "examples": ["ABC Bank"]}, "interest_type": {"type": "string", "title": "Interest Type", "description": "The type of interest (e.g., Lienholder, Lessor)", "examples": ["Lienholder"]}, "address": {"type": "string", "title": "Address", "description": "The address of the additional interest party", "examples": ["123 Main St, Toronto, ON M5V 1A1"]}, "phone_number": {"type": "string", "title": "Phone Number", "description": "The phone number of the additional interest party", "examples": ["416-555-1234"]}}, "type": "object", "required": ["name", "interest_type", "address", "phone_number"], "title": "AdditionalInterest"}, "Address": {"properties": {"address_line_1": {"type": "string", "title": "Address Line 1", "examples": ["123 Main St"]}, "address_line_2": {"type": "string", "title": "Address Line 2", "examples": ["Suite 502"]}, "city": {"type": "string", "title": "City", "examples": ["Toronto"]}, "province": {"$ref": "#/components/schemas/Province"}, "postal_code": {"type": "string", "title": "Postal Code", "examples": ["H0H 0H0"]}, "country": {"$ref": "#/components/schemas/CountryCode"}}, "type": "object", "required": ["address_line_1", "address_line_2", "city", "province", "postal_code", "country"], "title": "Address"}, "AgreedValueOpcf19ACoverage": {"properties": {"vehicle_value": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Vehicle Value"}, "agreed_value": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Agreed Value"}, "agreed_value_source": {"anyOf": [{"$ref": "#/components/schemas/AgreedValueSource"}, {"type": "null"}]}}, "type": "object", "title": "AgreedValueOpcf19ACoverage"}, "AgreedValueSource": {"type": "string", "enum": ["AGREED_VALUE_SOURCE_RED_BOOK", "AGREED_VALUE_SOURCE_APPRAISAL", "AGREED_VALUE_SOURCE_SALES_RECEIPT", "AGREED_VALUE_SOURCE_OTHER"], "title": "AgreedValueSource"}, "AssignDriverOnlyChangeData": {"properties": {"change_type": {"type": "string", "enum": ["ASSIGN_DRIVER_ONLY"], "const": "ASSIGN_DRIVER_ONLY", "title": "Change Type", "default": "ASSIGN_DRIVER_ONLY"}, "assign_drivers": {"$ref": "#/components/schemas/AssignDriversOnly"}}, "type": "object", "required": ["assign_drivers"], "title": "AssignDriverOnlyChangeData", "discriminator_value": "ASSIGN_DRIVER_ONLY"}, "AssignDriversOnly": {"properties": {"driver_assignments_for_new_vehicles": {"anyOf": [{"items": {"$ref": "#/components/schemas/NewVehicleAssignDriverInput"}, "type": "array"}, {"type": "null"}], "title": "Driver Assignments For New Vehicles"}, "driver_assignments_for_existing_vehicles": {"anyOf": [{"items": {"$ref": "#/components/schemas/ExistingVehicleAssignDriverInput"}, "type": "array"}, {"type": "null"}], "title": "Driver Assignments For Existing Vehicles"}}, "type": "object", "title": "AssignDriversOnly"}, "AsyncError": {"properties": {"error_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Type"}, "message": {"type": "string", "title": "Message"}, "portal_messages": {"anyOf": [{"$ref": "#/components/schemas/CarrierPortalMessages"}, {"type": "null"}]}}, "type": "object", "required": ["message"], "title": "AsyncError"}, "AsyncResponse_AddDriverResponse_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/AddDriverResponse", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[AddDriverResponse]"}, "AsyncResponse_AddVehicleResponse_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/AddVehicleResponse", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[AddVehicleResponse]"}, "AsyncResponse_Any_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[Any]"}, "AsyncResponse_ModifyCoveragesResponse_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/ModifyCoveragesResponse", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[ModifyCoveragesResponse]"}, "AsyncResponse_PolicyBillingDetails_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/PolicyBillingDetails", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[PolicyBillingDetails]"}, "AsyncResponse_SwapVehicleResponse_": {"properties": {"job_id": {"type": "string", "title": "Job Id"}, "status": {"$ref": "#/components/schemas/JobStatus"}, "result": {"$ref": "#/components/schemas/SwapVehicleResponse", "title": "Result"}, "error": {"$ref": "#/components/schemas/AsyncError", "title": "Error"}}, "type": "object", "required": ["job_id", "status"], "title": "AsyncResponse[SwapVehicleResponse]"}, "BillingMethod": {"type": "string", "enum": ["DIRECT_BILL"], "const": "DIRECT_BILL", "title": "BillingMethod"}, "CancelPolicyRequest_str_": {"properties": {"reason": {"type": "string", "title": "Reason"}, "source": {"type": "string", "enum": ["INSURED"], "const": "INSURED", "title": "Source"}, "cancellation_effective_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Cancellation Effective Date"}, "cancellation_note": {"type": "string", "title": "Cancellation Note", "description": "Required note before binding the cancellation request."}}, "additionalProperties": true, "type": "object", "required": ["reason", "source", "cancellation_note"], "title": "CancelPolicyRequest[str]"}, "CancelPolicyResponse": {"properties": {"success": {"type": "boolean", "title": "Success", "description": "Whether the cancellation request was successful"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message", "description": "Error message if the cancellation request failed"}}, "type": "object", "required": ["success"], "title": "CancelPolicyResponse", "description": "Response model for policy cancellation requests."}, "Carrier": {"properties": {"id": {"type": "string", "title": "Id"}, "name": {"type": "string", "title": "Name", "examples": ["Example Carrier"]}}, "type": "object", "required": ["id", "name"], "title": "Carrier"}, "CarrierList": {"properties": {"results": {"items": {"$ref": "#/components/schemas/Carrier"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["results"], "title": "CarrierList"}, "CarrierPortalMessages": {"properties": {"info": {"items": {"type": "string"}, "type": "array", "title": "Info"}, "warning": {"items": {"type": "string"}, "type": "array", "title": "Warning"}, "error": {"items": {"type": "string"}, "type": "array", "title": "Error"}}, "type": "object", "title": "CarrierPortalMessages"}, "CarrierPortalSessionDetail": {"properties": {"id": {"type": "string", "title": "Id"}, "carrier_id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Carrier Id"}, "status": {"$ref": "#/components/schemas/CarrierPortalSessionStatus"}, "message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Message"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["id", "carrier_id", "status", "message", "error_message", "created_at", "updated_at"], "title": "CarrierPortalSessionDetail"}, "CarrierPortalSessionStatus": {"type": "string", "enum": ["INITIALIZING", "CONFIGURING", "WAITING_FOR_INPUT", "PROMPT_FOR_MFA_CODE", "ACTIVE", "EXPIRED"], "title": "CarrierPortalSessionStatus"}, "CarrierResponse": {"properties": {"id": {"type": "string", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "logo": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Logo"}, "type": {"$ref": "#/components/schemas/CarrierType"}}, "type": "object", "required": ["id", "name", "type"], "title": "CarrierResponse"}, "CarrierType": {"type": "string", "enum": ["economical", "gore", "travelers", "caa", "wawanesa", "airtable", "test"], "title": "CarrierType"}, "ClaimsAndRiskAnalysis": {"properties": {"existing_policy_claims": {"items": {"$ref": "#/components/schemas/PolicyClaim"}, "type": "array", "title": "Existing Policy Claims"}, "underwriting_issues": {"items": {"$ref": "#/components/schemas/UnderwritingIssue"}, "type": "array", "title": "Underwriting Issues", "examples": [[{"message": "Applicant has a history of multiple claims in the past five years."}, {"message": "Vehicle has significant modifications that increase risk."}]]}}, "type": "object", "required": ["existing_policy_claims", "underwriting_issues"], "title": "ClaimsAndRiskAnalysis"}, "CloseQuoteRequest": {"properties": {}, "type": "object", "title": "CloseQuoteRequest"}, "CloseQuoteResponse": {"properties": {"draft_id": {"type": "string", "title": "Draft Id"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}, "error_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Type"}}, "type": "object", "required": ["draft_id"], "title": "CloseQuoteResponse"}, "ConvictionIncident": {"properties": {"offence_source": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Offence Source", "description": "Source of the conviction/incident data (e.g., MVR, BMS)", "examples": ["MVR"]}, "conviction_incident_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Conviction Incident Date", "description": "Date when the conviction/incident was recorded", "examples": ["2022-12-14"]}, "cgi_violation_code_and_description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Cgi Violation Code And Description", "description": "CGI violation code and its description", "examples": ["INSA - FAILURE TO PRODUCE EVIDENCE OF INSURANCE"]}, "severity": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Severity", "description": "Severity level of the violation (e.g., INFORMATION, Minor, Major)", "examples": ["INFORMATION"]}, "offence_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Offence Date", "description": "Original date when the offence occurred", "examples": ["2021-11-16"]}}, "type": "object", "title": "ConvictionIncident", "description": "Individual conviction or incident record from driver's record."}, "CountryCode": {"type": "string", "enum": ["CA", "US"], "title": "CountryCode"}, "CreateDriverInput": {"properties": {"policy": {"$ref": "#/components/schemas/PolicyChangeInput"}, "driver": {"$ref": "#/components/schemas/DriverDetailsInput"}, "driver_assignments_for_existing_vehicles": {"items": {"$ref": "#/components/schemas/ExistingVehicleAssignDriverInput"}, "type": "array", "minItems": 1, "title": "Driver Assignments For Existing Vehicles", "description": "A list of vehicle VINs and the drivers to be assigned to the existing vehicles. You must specify at least 1 driver assignment for the existing vehicle(s) on the policy."}, "coverages_for_existing_vehicles": {"items": {"$ref": "#/components/schemas/ExistingVehicleCoverageInput"}, "type": "array", "title": "Coverages For Existing Vehicles", "description": "A list of vehicle VINs and the coverages to set on those vehicles."}}, "type": "object", "required": ["driver", "driver_assignments_for_existing_vehicles", "coverages_for_existing_vehicles"], "title": "CreateDriverInput"}, "CreateVehicleForSwapInput": {"properties": {"vehicle": {"$ref": "#/components/schemas/VehicleDetailsInput"}, "driver_assignments_for_new_vehicle": {"items": {"$ref": "#/components/schemas/DriverAssignmentInput"}, "type": "array", "minItems": 1, "title": "Driver Assignments For New Vehicle", "description": "A list of vehicle VINs and the drivers associated to the newly added vehicle. You must specify at least 1 driver assignment."}, "coverage": {"$ref": "#/components/schemas/VehicleCoverage"}}, "type": "object", "required": ["vehicle", "driver_assignments_for_new_vehicle", "coverage"], "title": "CreateVehicleForSwapInput"}, "CreateVehicleInput": {"properties": {"additional_drivers": {"items": {"$ref": "#/components/schemas/DriverDetailsInput"}, "type": "array", "title": "Additional Drivers", "description": "An list of new drivers to add to the policy. If no new drivers are being added, use an empty list."}, "vehicle": {"$ref": "#/components/schemas/VehicleDetailsInput"}, "driver_assignments_for_new_vehicle": {"items": {"$ref": "#/components/schemas/DriverAssignmentInput"}, "type": "array", "minItems": 1, "title": "Driver Assignments For New Vehicle", "description": "A list of vehicle VINs and the drivers associated to the newly added vehicle. You must specify at least 1 driver assignment."}, "coverage": {"$ref": "#/components/schemas/VehicleCoverage"}}, "type": "object", "required": ["vehicle", "driver_assignments_for_new_vehicle", "coverage"], "title": "CreateVehicleInput"}, "CreateVehicleRequestInput": {"properties": {"policy": {"$ref": "#/components/schemas/PolicyChangeInput"}, "new_vehicle": {"$ref": "#/components/schemas/CreateVehicleInput"}, "driver_assignments_for_existing_vehicles": {"items": {"$ref": "#/components/schemas/ExistingVehicleAssignDriverInput"}, "type": "array", "minItems": 1, "title": "Driver Assignments For Existing Vehicles", "description": "A list of vehicle VINs and the drivers associated to the existing vehicles. You must specify at least 1 driver assignment for the existing vehicle(s) on the policy."}, "coverages_for_existing_vehicles": {"items": {"$ref": "#/components/schemas/ExistingVehicleCoverageInput"}, "type": "array", "title": "Coverages For Existing Vehicles", "description": "A list of vehicle VINs and the coverages to set on those vehicles."}}, "type": "object", "required": ["new_vehicle", "driver_assignments_for_existing_vehicles"], "title": "CreateVehicleRequestInput"}, "CredentialResponse": {"properties": {"id": {"type": "string", "title": "Id"}, "status": {"$ref": "#/components/schemas/CredentialStatusCode"}, "carrier": {"anyOf": [{"$ref": "#/components/schemas/CarrierResponse"}, {"type": "null"}]}, "arn": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Arn"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}}, "type": "object", "required": ["id", "status"], "title": "CredentialResponse"}, "CredentialStatusCode": {"type": "string", "enum": ["verified", "requires_mfa", "requires_credentials", "expired", "internal_error"], "title": "CredentialStatusCode"}, "Driver": {"properties": {"first_name": {"type": "string", "title": "First Name", "examples": ["John"]}, "last_name": {"type": "string", "title": "Last Name", "examples": ["Smith"]}, "drivers_license": {"$ref": "#/components/schemas/DriversLicense"}, "date_first_insured_by_previous_carrier": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date First Insured By Previous Carrier", "examples": ["2023-07-28"]}, "date_of_birth": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Birth", "examples": ["1994-07-28"]}, "marital_status": {"anyOf": [{"$ref": "#/components/schemas/MaritalStatus"}, {"type": "null"}]}, "gender": {"anyOf": [{"$ref": "#/components/schemas/Gender"}, {"type": "null"}]}, "primary_phone": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Primary Phone", "examples": ["647-555-5555"]}, "home_phone": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Home Phone", "examples": ["647-555-5555"]}, "mobile_phone": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Mobile Phone", "examples": ["647-555-5555"]}, "primary_email": {"anyOf": [{"type": "string", "format": "email"}, {"type": "null"}], "title": "Primary Email", "examples": ["john.smith@example.com"]}, "address": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Address", "examples": ["123 Main St, Toronto, ON M5V 3A8"]}, "personal_auto_insured_elsewhere": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Personal Auto Insured Elsewhere"}, "motorcycle_insured_elsewhere": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Motorcycle Insured Elsewhere"}, "commercial_driver_only": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Commercial Driver Only"}, "excluded": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Excluded"}, "qualify_for_retiree_discount": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Qualify For Retiree Discount"}, "away_at_school": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Away At School"}, "full_time_student_kms": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Full Time Student Kms", "examples": [2000]}, "full_time_farmer": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Full Time Farmer"}, "member": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Member"}, "member_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Member Name", "examples": ["JANE DOE"]}, "member_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Member Number", "examples": ["123456789012"]}, "member_status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Member Status", "examples": ["Active"]}, "member_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Member Type", "examples": ["Basic"]}, "member_join_year": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Member Join Year", "examples": ["2024"]}, "caa_head_start": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Caa Head Start"}, "loe_on_file": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Loe On File"}, "abstract_on_file": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Abstract On File"}, "suspensions": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Suspensions"}, "mvr_record": {"anyOf": [{"$ref": "#/components/schemas/MVRRecord"}, {"type": "null"}]}, "convictions_incidents": {"anyOf": [{"items": {"$ref": "#/components/schemas/ConvictionIncident"}, "type": "array"}, {"type": "null"}], "title": "Convictions Incidents", "description": "List of individual conviction/incident records from driver's history"}, "suspended_reason": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Suspended Reason"}, "date_suspended": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Suspended"}, "date_reinstated": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Reinstated"}, "prior_insurance_in_canada": {"anyOf": [{"$ref": "#/components/schemas/PriorInsurance"}, {"type": "null"}]}, "date_of_full_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Full Licence", "examples": ["2023-07-28"]}, "date_of_probationary_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Probationary Licence", "examples": ["2022-07-28"]}, "date_of_learners_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Learners Licence", "examples": ["2021-07-28"]}, "date_first_insured_in_canada": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date First Insured In Canada", "examples": ["2021-07-28"]}, "driver_training_completed": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Driver Training Completed"}, "driving_record_determination": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Driving Record Determination", "examples": ["2021-07-28"]}, "convictions": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Convictions"}, "latest_minor_conviction_date_num_minor_3yrs_initial_disclosure": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Minor Conviction Date Num Minor 3Yrs Initial Disclosure", "examples": [0]}, "latest_minor_conviction_date_num_minor_3yrs_actual": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Minor Conviction Date Num Minor 3Yrs Actual", "examples": [0]}, "latest_minor_conviction_date_num_minor_3yrs_mcp_applies": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Minor Conviction Date Num Minor 3Yrs Mcp Applies", "examples": [0]}, "latest_minor_conviction_date_num_minor_3yrs_rates": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Minor Conviction Date Num Minor 3Yrs Rates", "examples": [0]}, "latest_major_conviction_date_num_major_3yrs_initial_disclosure": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Major Conviction Date Num Major 3Yrs Initial Disclosure", "examples": [0]}, "latest_major_conviction_date_num_major_3yrs_actual": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Major Conviction Date Num Major 3Yrs Actual", "examples": [0]}, "latest_major_conviction_date_num_major_3yrs_mcp_applies": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Major Conviction Date Num Major 3Yrs Mcp Applies", "examples": [0]}, "latest_major_conviction_date_num_major_3yrs_rates": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Major Conviction Date Num Major 3Yrs Rates", "examples": [0]}, "latest_criminal_conviction_date_num_criminal_3yrs_initial_disclosure": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Criminal Conviction Date Num Criminal 3Yrs Initial Disclosure", "examples": [0]}, "latest_criminal_conviction_date_num_criminal_3yrs_actual": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Criminal Conviction Date Num Criminal 3Yrs Actual", "examples": [0]}, "latest_criminal_conviction_date_num_criminal_3yrs_mcp_applies": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Criminal Conviction Date Num Criminal 3Yrs Mcp Applies", "examples": [0]}, "latest_criminal_conviction_date_num_criminal_3yrs_rates": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Latest Criminal Conviction Date Num Criminal 3Yrs Rates", "examples": [0]}}, "type": "object", "required": ["first_name", "last_name", "drivers_license"], "title": "Driver"}, "DriverAssignmentInput": {"properties": {"driver_license_number": {"type": "string", "title": "Driver License Number"}, "driver_type_of_operator": {"$ref": "#/components/schemas/VehicleDriverTypeOfOperator"}}, "type": "object", "required": ["driver_license_number", "driver_type_of_operator"], "title": "DriverAssignmentInput"}, "DriverDetailsInput": {"properties": {"first_name": {"type": "string", "title": "First Name", "examples": ["John"]}, "last_name": {"type": "string", "title": "Last Name", "examples": ["Smith"]}, "date_of_birth": {"type": "string", "format": "date", "title": "Date Of Birth", "examples": ["1994-07-28"]}, "marital_status": {"$ref": "#/components/schemas/MaritalStatus"}, "gender": {"$ref": "#/components/schemas/Gender"}, "drivers_license": {"$ref": "#/components/schemas/DriversLicenseInput"}, "driver_training_completed": {"type": "boolean", "title": "Driver Training Completed"}, "date_first_insured_in_canada": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date First Insured In Canada", "examples": ["2021-07-28"]}, "prior_insurance_in_canada": {"$ref": "#/components/schemas/PriorInsurance", "title": "Prior Insurance In Canada"}, "driving_record_determination": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Driving Record Determination", "examples": ["2021-07-28"]}, "date_of_full_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Full Licence", "description": "The date the full license was first obtained (e.g. `G`). Required when providing a full license class (`DRIVERS_LICENSE_CLASS_VALUE_A`, `DRIVERS_LICENSE_CLASS_VALUE_B`, `DRIVERS_LICENSE_CLASS_VALUE_C`, `DRIVERS_LICENSE_CLASS_VALUE_D`, `DRIVERS_LICENSE_CLASS_VALUE_E`, `DRIVERS_LICENSE_CLASS_VALUE_F`, `DRIVERS_LICENSE_CLASS_VALUE_G`).", "examples": ["2023-07-28"]}, "date_of_probationary_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Probationary Licence", "description": "The date the probationary license was first obtained (e.g. `G2`). Required when providing a probationary license class (`DRIVERS_LICENSE_CLASS_VALUE_G2`).", "examples": ["2022-07-28"]}, "date_of_learners_licence": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Of Learners Licence", "description": "The date the probationary license was first obtained (e.g. `G1`). Required when providing a learners license class (`DRIVERS_LICENSE_CLASS_VALUE_G1`).", "examples": ["2021-07-28"]}}, "type": "object", "required": ["first_name", "last_name", "date_of_birth", "marital_status", "gender", "drivers_license", "driver_training_completed"], "title": "DriverDetailsInput"}, "DriversLicense": {"properties": {"number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Number", "examples": ["U5146-37118-09374"]}, "license_class": {"anyOf": [{"$ref": "#/components/schemas/DriversLicenseClass"}, {"type": "null"}]}, "province": {"anyOf": [{"$ref": "#/components/schemas/Province"}, {"type": "null"}]}, "status": {"anyOf": [{"$ref": "#/components/schemas/DriversLicenseStatus"}, {"type": "null"}]}}, "type": "object", "title": "DriversLicense"}, "DriversLicenseClass": {"type": "string", "enum": ["DRIVERS_LICENSE_CLASS_VALUE_G1", "DRIVERS_LICENSE_CLASS_VALUE_G2", "DRIVERS_LICENSE_CLASS_VALUE_G", "DRIVERS_LICENSE_CLASS_VALUE_A", "DRIVERS_LICENSE_CLASS_VALUE_B", "DRIVERS_LICENSE_CLASS_VALUE_C", "DRIVERS_LICENSE_CLASS_VALUE_D", "DRIVERS_LICENSE_CLASS_VALUE_E", "DRIVERS_LICENSE_CLASS_VALUE_F"], "title": "DriversLicenseClass"}, "DriversLicenseInput": {"properties": {"number": {"type": "string", "title": "Number", "examples": ["U5146-37118-09374"]}, "license_class": {"$ref": "#/components/schemas/DriversLicenseClass"}, "province": {"$ref": "#/components/schemas/DriversLicenseProvinceInput"}}, "type": "object", "required": ["number", "license_class", "province"], "title": "DriversLicenseInput"}, "DriversLicenseProvinceInput": {"type": "string", "enum": ["ON"], "const": "ON", "title": "DriversLicenseProvinceInput"}, "DriversLicenseStatus": {"type": "string", "enum": ["DRIVERS_LICENSE_STATUS_LICENSED", "DRIVERS_LICENSE_STATUS_UNLICENSED", "DRIVERS_LICENSE_STATUS_SUSPENDED", "DRIVERS_LICENSE_STATUS_CANCELLED", "DRIVERS_LICENSE_STATUS_EXPIRED"], "title": "DriversLicenseStatus"}, "EditDriverDetailsInput": {"properties": {"first_name": {"type": "string", "title": "First Name", "examples": ["John"]}, "last_name": {"type": "string", "title": "Last Name", "examples": ["Smith"]}, "marital_status": {"$ref": "#/components/schemas/MaritalStatus"}, "gender": {"$ref": "#/components/schemas/Gender", "examples": ["GENDER_VALUE_MALE"]}, "driver_training_completed": {"type": "boolean", "title": "Driver Training Completed", "examples": [false]}, "abstract_on_file": {"type": "boolean", "title": "Abstract On File", "examples": [false]}, "mobile_phone": {"type": "string", "title": "Mobile Phone", "examples": ["647-555-5555"]}, "home_phone": {"type": "string", "title": "Home Phone", "examples": ["647-555-5555"]}, "primary_email": {"type": "string", "format": "email", "title": "Primary Email", "examples": ["john.smith@example.com"]}, "qualify_for_retiree_discount": {"type": "boolean", "title": "Qualify For Retiree Discount", "examples": [false]}, "away_at_school": {"type": "boolean", "title": "Away At School", "examples": [false]}, "full_time_student_kms": {"type": "integer", "title": "Full Time Student Kms", "examples": [2000]}, "caa_head_start": {"type": "boolean", "title": "Caa Head Start", "examples": [false]}, "loe_on_file": {"type": "boolean", "title": "Loe On File", "examples": [false]}, "licence_status": {"$ref": "#/components/schemas/DriversLicenseStatus", "title": "Licence Status", "examples": ["DRIVERS_LICENSE_STATUS_LICENSED"]}, "licence_type": {"$ref": "#/components/schemas/DriversLicenseClass", "title": "Licence Type", "examples": ["DRIVERS_LICENSE_CLASS_VALUE_G"]}, "date_of_full_licence": {"type": "string", "format": "date", "title": "Date Of Full Licence", "examples": ["2023-07-28"]}, "date_of_probationary_licence": {"type": "string", "format": "date", "title": "Date Of Probationary Licence", "examples": ["2022-07-28"]}, "date_of_learners_licence": {"type": "string", "format": "date", "title": "Date Of Learners Licence", "examples": ["2021-07-28"]}, "suspensions": {"type": "boolean", "title": "Suspensions", "examples": [false]}, "suspended_reason": {"type": "string", "title": "Suspended Reason", "examples": ["DUI"]}, "date_suspended": {"type": "string", "format": "date", "title": "Date Suspended", "examples": ["2020-01-15"]}, "date_reinstated": {"type": "string", "format": "date", "title": "Date Reinstated", "examples": ["2020-06-15"]}}, "type": "object", "required": ["first_name", "last_name", "marital_status"], "title": "EditDriverDetailsInput", "description": "Input for edit driver operations - includes optional CAA-specific fields for all carriers."}, "EditDriverOnlyChangeData": {"properties": {"change_type": {"type": "string", "enum": ["EDIT_DRIVER_DETAILS_ONLY"], "const": "EDIT_DRIVER_DETAILS_ONLY", "title": "Change Type", "default": "EDIT_DRIVER_DETAILS_ONLY"}, "driver_license_number": {"type": "string", "title": "Driver License Number"}, "updated_driver_details": {"$ref": "#/components/schemas/EditDriverDetailsInput"}}, "type": "object", "required": ["driver_license_number", "updated_driver_details"], "title": "EditDriverOnlyChangeData", "discriminator_value": "EDIT_DRIVER_DETAILS_ONLY"}, "EditQuotedDraftRequest": {"properties": {}, "type": "object", "title": "EditQuotedDraftRequest"}, "EditQuotedDraftResponse": {"properties": {"draft_id": {"type": "string", "title": "Draft Id"}, "quote_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Quote Id"}, "success": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Success"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}, "error_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Type"}}, "type": "object", "required": ["draft_id"], "title": "EditQuotedDraftResponse"}, "EditVehicleDetailsInput": {"properties": {"annual_driving_distance": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Annual Driving Distance", "description": "The total distance driven annually in kilometers. Must be greater than or equal to 0.", "examples": ["10000"]}, "ownership": {"anyOf": [{"$ref": "#/components/schemas/VehicleOwnership"}, {"type": "null"}]}, "winter_tires": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Winter Tires"}, "one_way_commute_distance": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "One Way Commute Distance", "description": "The distance in kilometers for a one-way commute. Must be greater than or equal to 0.", "examples": ["5"]}, "odometer_reading": {"anyOf": [{"type": "integer", "maximum": 999999.0, "minimum": 0.0}, {"type": "null"}], "title": "Odometer Reading", "description": "The current odometer reading of the vehicle. Must be between 0 and 999999.", "examples": ["50000"]}, "primary_use": {"anyOf": [{"$ref": "#/components/schemas/VehiclePrimaryUse"}, {"type": "null"}]}, "annual_business_kms": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Annual Business Kms", "description": "Annual kilometers driven for business use. Must be greater than or equal to 0.", "examples": ["5000"]}, "anti_theft_device": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Anti Theft Device", "description": "Whether the vehicle has an anti-theft device installed"}, "months_operated_outside_canada": {"anyOf": [{"type": "integer", "maximum": 12.0, "minimum": 0.0}, {"type": "null"}], "title": "Months Operated Outside Canada", "description": "Number of months the vehicle is operated outside of Canada", "examples": ["2"]}, "garaged_at": {"anyOf": [{"$ref": "#/components/schemas/Address"}, {"type": "null"}], "description": "The address where the vehicle is garaged/stored"}, "has_non_factory_electronics": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Has Non Factory Electronics", "description": "Whether the vehicle has non-factory electronics installed"}, "non_factory_electronics_value": {"anyOf": [{"$ref": "#/components/schemas/VehicleNonFactoryElectronics"}, {"type": "null"}], "description": "The value range of non-factory electronics (Less than $1,500, More than $1,500, or None)"}, "is_used_for_carpooling": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Used For Carpooling", "description": "Whether the vehicle is used for carpooling"}, "carpooling_passenger_count": {"anyOf": [{"type": "integer", "maximum": 20.0, "minimum": 1.0}, {"type": "null"}], "title": "Carpooling Passenger Count", "description": "Number of passengers when carpooling (required when is_used_for_carpooling is true)", "examples": ["4"]}, "vehicle_modifications_exist": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Vehicle Modifications Exist", "description": "Whether the vehicle has modifications or customizations"}, "unrepaired_damaged": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Unrepaired Damaged", "description": "Whether the vehicle has unrepaired damage"}, "is_used_to_carry_paying_passengers": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Used To Carry Paying Passengers", "description": "Whether the vehicle is used to carry paying passengers"}, "carrying_passengers_describe": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Carrying Passengers Describe", "description": "Description of carrying paying passengers usage (conditional field)"}, "modifications_describe": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Modifications Describe", "description": "Description of vehicle modifications/customizations (conditional field)"}, "unrepaired_damage_describe": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Unrepaired Damage Describe", "description": "Description of unrepaired damage (conditional field)"}, "non_factory_electronics_describe": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Non Factory Electronics Describe", "description": "Description of non-factory electronics (conditional field)"}, "modifications_type": {"anyOf": [{"$ref": "#/components/schemas/VehicleModificationType"}, {"type": "null"}], "description": "The type of vehicle modifications (Accessibility or Other) - CAA specific field"}, "vehicle_add_on_value": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Vehicle Add On Value", "description": "The dollar value of vehicle modifications/add-ons. Must be greater than or equal to 0.", "examples": ["2500"]}, "additional_interests_deleted": {"anyOf": [{"items": {"$ref": "#/components/schemas/AdditionalInterest"}, "type": "array"}, {"type": "null"}], "title": "Additional Interests Deleted", "description": "List of additional interest parties associated with the vehicle", "examples": [{"address": "123 Main St, Toronto, ON M5V 1A1", "interest_type": "Lienholder", "name": "ABC Bank", "phone_number": "416-555-1234"}]}}, "type": "object", "title": "EditVehicleDetailsInput", "description": "Input for edit vehicle operations - includes optional CAA-specific fields for all carriers."}, "EditVehicleOnlyChangeData": {"properties": {"change_type": {"type": "string", "enum": ["EDIT_VEHICLE_DETAILS_ONLY"], "const": "EDIT_VEHICLE_DETAILS_ONLY", "title": "Change Type", "default": "EDIT_VEHICLE_DETAILS_ONLY"}, "vehicle_vin": {"type": "string", "title": "Vehicle Vin"}, "updated_vehicle_details": {"$ref": "#/components/schemas/EditVehicleDetailsInput"}}, "type": "object", "required": ["vehicle_vin", "updated_vehicle_details"], "title": "EditVehicleOnlyChangeData", "discriminator_value": "EDIT_VEHICLE_DETAILS_ONLY"}, "Error": {"properties": {"message": {"type": "string", "title": "Message"}, "error_code": {"type": "integer", "title": "Error Code"}}, "type": "object", "required": ["message", "error_code"], "title": "Error"}, "ExistingVehicleAssignDriverInput": {"properties": {"vin": {"type": "string", "minLength": 1, "title": "Vin", "description": "Vehicle Identification Number of the vehicle to assign the driver to.", "examples": ["5FNRL5H30GB027317"]}, "driver_license_number": {"type": "string", "title": "Driver License Number"}, "driver_type_of_operator": {"$ref": "#/components/schemas/VehicleDriverTypeOfOperator"}, "relationship": {"anyOf": [{"$ref": "#/components/schemas/VehicleDriverRelationship"}, {"type": "null"}]}}, "type": "object", "required": ["vin", "driver_license_number", "driver_type_of_operator"], "title": "ExistingVehicleAssignDriverInput"}, "ExistingVehicleCoverageInput": {"properties": {"vin": {"type": "string", "minLength": 1, "title": "Vin", "description": "Vehicle Identification Number of the vehicle to set coverages on.", "examples": ["5FNRL5H30GB027317"]}, "coverage": {"$ref": "#/components/schemas/VehicleCoverage"}}, "type": "object", "required": ["vin", "coverage"], "title": "ExistingVehicleCoverageInput"}, "ExpireSessionRequest": {"properties": {"arn": {"type": "string", "title": "Arn"}}, "type": "object", "required": ["arn"], "title": "ExpireSessionRequest"}, "Gender": {"type": "string", "enum": ["GENDER_VALUE_MALE", "GENDER_VALUE_FEMALE", "GENDER_VALUE_X"], "title": "Gender"}, "GenerateQuoteResponse": {"properties": {"draft_id": {"type": "string", "title": "Draft Id"}, "quote": {"anyOf": [{"$ref": "#/components/schemas/Quote"}, {"type": "null"}]}, "payment": {"anyOf": [{"$ref": "#/components/schemas/Payment"}, {"type": "null"}]}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}, "error_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Type"}, "portal_messages": {"anyOf": [{"$ref": "#/components/schemas/CarrierPortalMessages"}, {"type": "null"}]}}, "type": "object", "required": ["draft_id"], "title": "GenerateQuoteResponse"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "IncomeReplacementLimit": {"type": "string", "enum": ["INCOME_REPLACEMENT_LIMIT_VALUE_600", "INCOME_REPLACEMENT_LIMIT_VALUE_800", "INCOME_REPLACEMENT_LIMIT_VALUE_1000"], "title": "IncomeReplacementLimit"}, "JobStatus": {"type": "string", "enum": ["INITIALIZING", "IN_PROGRESS", "FAILED", "COMPLETED"], "title": "JobStatus"}, "LiabilityForDamageToNonOwnedAutomobiles27": {"type": "string", "enum": ["LIABILITY_FOR_DAMAGE_TO_NON_OWNED_AUTOMOBILES_VALUE_40_000", "LIABILITY_FOR_DAMAGE_TO_NON_OWNED_AUTOMOBILES_VALUE_50_000", "LIABILITY_FOR_DAMAGE_TO_NON_OWNED_AUTOMOBILES_VALUE_75_000", "LIABILITY_FOR_DAMAGE_TO_NON_OWNED_AUTOMOBILES_VALUE_100_000"], "title": "LiabilityForDamageToNonOwnedAutomobiles27"}, "MFARequest": {"properties": {"id": {"type": "string", "minLength": 1, "title": "Id"}, "carrier_external_id": {"type": "string", "title": "Carrier External Id"}, "mfa_code": {"type": "string", "minLength": 1, "title": "Mfa Code"}}, "type": "object", "required": ["id", "carrier_external_id", "mfa_code"], "title": "MFARequest"}, "MVRRecord": {"properties": {"province": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Province", "examples": ["ON"]}, "issue_date": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Issue Date", "examples": ["2020-01-15"]}, "expiry_date": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Expiry Date", "examples": ["2025-01-15"]}, "report_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Report Date", "examples": ["2024-01-03T12:07:00"]}, "requested_date": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Requested Date", "examples": ["2024-01-03T12:07:00"]}}, "type": "object", "title": "MVRRecord", "description": "Motor Vehicle Record information extracted from carrier systems."}, "MaritalStatus": {"type": "string", "enum": ["MARTIAL_STATUS_VALUE_SINGLE", "MARTIAL_STATUS_VALUE_MARRIED", "MARTIAL_STATUS_VALUE_COMMON-LAW", "MARTIAL_STATUS_VALUE_DOMESTIC_PARTNER", "MARTIAL_STATUS_VALUE_SEPARATED", "MARTIAL_STATUS_VALUE_DIVORCED", "MARTIAL_STATUS_VALUE_WIDOWED", "MARTIAL_STATUS_VALUE_UNKNOWN"], "title": "MaritalStatus"}, "MedicalRehabilitationAndAttendantCareLimit": {"type": "string", "enum": ["MEDICAL_REHABILITATION_AND_ATTENDANT_CARE_LIMIT_VALUE_130_000", "MEDICAL_REHABILITATION_AND_ATTENDANT_CARE_LIMIT_VALUE_1_000_000"], "title": "MedicalRehabilitationAndAttendantCareLimit"}, "ModifyCoveragesRequestInput": {"properties": {"policy": {"$ref": "#/components/schemas/PolicyChangeInput"}, "driver_assignments_for_existing_vehicles": {"items": {"$ref": "#/components/schemas/ExistingVehicleAssignDriverInput"}, "type": "array", "title": "Driver Assignments For Existing Vehicles", "description": "A list of vehicle VINs and the drivers associated to the existing vehicles."}, "coverages_for_existing_vehicles": {"items": {"$ref": "#/components/schemas/ExistingVehicleCoverageInput"}, "type": "array", "title": "Coverages For Existing Vehicles", "description": "A list of vehicle VINs and the coverages to set on those vehicles."}}, "type": "object", "required": ["driver_assignments_for_existing_vehicles", "coverages_for_existing_vehicles"], "title": "ModifyCoveragesRequestInput"}, "ModifyCoveragesResponse": {"properties": {"policy_review": {"$ref": "#/components/schemas/PolicyReview"}}, "type": "object", "required": ["policy_review"], "title": "ModifyCoveragesResponse"}, "NewQuoteRequest": {"properties": {"effective_date": {"type": "string", "title": "Effective Date"}, "request_type": {"$ref": "#/components/schemas/RequestType"}}, "type": "object", "required": ["effective_date", "request_type"], "title": "NewQuoteRequest"}, "NewVehicleAssignDriverInput": {"properties": {"vin": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Vin", "description": "Vehicle Identification Number of the vehicle to set coverages on.", "examples": ["5FNRL5H30GB027317"]}, "model_year": {"type": "string", "title": "Model Year", "description": "Model year of the vehicle in YYYY format"}, "make": {"type": "string", "title": "Make"}, "model": {"type": "string", "title": "Model"}, "driver_license_number": {"type": "string", "title": "Driver License Number"}, "driver_type_of_operator": {"$ref": "#/components/schemas/VehicleDriverTypeOfOperator"}, "relationship": {"anyOf": [{"$ref": "#/components/schemas/VehicleDriverRelationship"}, {"type": "null"}]}}, "type": "object", "required": ["driver_license_number", "driver_type_of_operator"], "title": "NewVehicleAssignDriverInput"}, "NewVehicleCoverageInput": {"properties": {"vin": {"anyOf": [{"type": "string", "minLength": 1}, {"type": "null"}], "title": "Vin", "description": "Vehicle Identification Number of the vehicle to set coverages on.", "examples": ["5FNRL5H30GB027317"]}, "model_year": {"type": "string", "title": "Model Year", "description": "Model year of the vehicle in YYYY format"}, "make": {"type": "string", "title": "Make"}, "model": {"type": "string", "title": "Model"}, "coverage": {"$ref": "#/components/schemas/VehicleCoverage"}}, "type": "object", "required": ["coverage"], "title": "NewVehicleCoverageInput"}, "Payment": {"properties": {"payments_preview": {"items": {"$ref": "#/components/schemas/PaymentPreviewItem"}, "type": "array", "title": "Payments Preview", "examples": [[{"amount": "123.12", "date": "2023-07-28"}, {"amount": "140.56", "date": "2023-08-28"}, {"amount": "140.56", "date": "2023-09-28"}]]}}, "type": "object", "required": ["payments_preview"], "title": "Payment"}, "PaymentFrequency": {"type": "string", "enum": ["MONTHLY", "ANNUALLY"], "title": "PaymentFrequency", "description": "How often a payment occurs (eg. monthly, annually).\n\nGore 'One Pay Payment Plan' policies are treated as annual payments."}, "PaymentInvoiceStatus": {"type": "string", "enum": ["DUE", "BILLED", "PLANNED"], "title": "PaymentInvoiceStatus"}, "PaymentPaidStatus": {"type": "string", "enum": ["FULLY_PAID", "PARTIALLY_PAID", "UNPAID"], "title": "PaymentPaidStatus"}, "PaymentPreviewItem": {"properties": {"date": {"type": "string", "format": "date", "title": "Date", "examples": ["2023-07-28"]}, "amount": {"type": "string", "title": "Amount", "description": "The dollar amount to be paid on the associated date.", "examples": ["123.12"]}}, "type": "object", "required": ["date", "amount"], "title": "PaymentPreviewItem"}, "PaymentScheduleRecord": {"properties": {"invoice_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Invoice Date", "description": "The date the invoice was created.", "examples": ["2023-07-28"]}, "due_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Due Date", "description": "The date the invoice is due.", "examples": ["2023-08-28"]}, "invoice_status": {"anyOf": [{"$ref": "#/components/schemas/PaymentInvoiceStatus"}, {"type": "null"}], "description": "The normalized status of whether the invoice has been issued or not."}, "amount_total": {"type": "string", "title": "Amount Total", "description": "The total amount required to be paid for the invoice.", "examples": ["123.12"]}, "amount_due": {"type": "string", "title": "Amount Due", "description": "The total amount required to be paid before the specified due date. Also known as the billed amount.", "examples": ["123.12"]}, "amount_past_due": {"type": "string", "title": "Amount Past Due", "description": "The total amount that has not been paid before the due date.", "examples": ["123.12"]}, "amount_paid": {"type": "string", "title": "Amount Paid", "description": "The total amount that has been paid.", "examples": ["123.12"]}, "paid_status": {"anyOf": [{"$ref": "#/components/schemas/PaymentPaidStatus"}, {"type": "null"}], "description": "The normalized status of whether a payment has been made or not."}}, "type": "object", "required": ["invoice_date", "due_date", "invoice_status", "amount_total", "amount_due", "amount_past_due", "amount_paid", "paid_status"], "title": "PaymentScheduleRecord"}, "PaymentType": {"type": "string", "enum": ["CREDIT_CARD", "BANK_ACCOUNT", "INVOICE"], "title": "PaymentType", "description": "How a payment is made (eg. credit card, bank account)."}, "PeriodType": {"type": "string", "enum": ["PAST", "CURRENT", "FUTURE"], "title": "PeriodType"}, "PolicyBillingDetails": {"properties": {"billing_method": {"anyOf": [{"$ref": "#/components/schemas/BillingMethod"}, {"type": "null"}]}, "payment_frequency": {"anyOf": [{"$ref": "#/components/schemas/PaymentFrequency"}, {"type": "null"}], "description": "How often a payment occurs (eg. monthly, annually). Gore 'One Pay Payment Plan' policies are treated as annual payments."}, "payment_withdrawal_day": {"anyOf": [{"type": "integer", "maximum": 31.0, "minimum": 1.0}, {"type": "null"}], "title": "Payment Withdrawal Day", "description": "The day of the month when a payment is withdrawn (eg. `14` would indicate payments are withdrawn on the 14th of every month). Must be between 1 and 31.", "examples": [14]}, "payment_type": {"anyOf": [{"$ref": "#/components/schemas/PaymentType"}, {"type": "null"}], "description": "The normalized type of payment (eg. credit card, bank account).", "examples": ["Pre-authorized, Credit Card"]}, "policy_periods": {"items": {"$ref": "#/components/schemas/PolicyBillingPeriod"}, "type": "array", "title": "Policy Periods", "description": "A list of periods in which the policy was active."}, "payment_schedule": {"items": {"$ref": "#/components/schemas/PaymentScheduleRecord"}, "type": "array", "title": "Payment Schedule", "description": "Historical, current and future payment schedule for the policy.", "deprecated": true}, "payment_details_token": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Payment Details Token", "description": "Vault token to securely retrieve payment details for the policy."}, "can_edit_payment_details": {"type": "boolean", "title": "Can Edit Payment Details", "description": "Whether the payment details can be edited or not."}}, "type": "object", "required": ["billing_method", "payment_frequency", "payment_withdrawal_day", "payment_type", "policy_periods", "payment_schedule", "payment_details_token", "can_edit_payment_details"], "title": "PolicyBillingDetails"}, "PolicyBillingPeriod": {"properties": {"effective_date": {"type": "string", "format": "date", "title": "Effective Date", "examples": ["2023-07-28"]}, "expiration_date": {"type": "string", "format": "date", "title": "Expiration Date", "examples": ["2024-07-28"]}, "period_type": {"$ref": "#/components/schemas/PeriodType", "examples": ["CURRENT"]}, "payment_schedule": {"items": {"$ref": "#/components/schemas/PaymentScheduleRecord"}, "type": "array", "title": "Payment Schedule", "description": "Historical, current and future payment schedule for the policy."}}, "type": "object", "required": ["effective_date", "expiration_date", "period_type", "payment_schedule"], "title": "PolicyBillingPeriod"}, "PolicyChangeInput": {"properties": {"effective_date": {"type": "string", "format": "date", "title": "Effective Date", "examples": ["2023-07-28"]}}, "type": "object", "title": "PolicyChangeInput"}, "PolicyClaim": {"properties": {"id": {"type": "string", "title": "Id"}}, "type": "object", "required": ["id"], "title": "PolicyClaim"}, "PolicyPeriod": {"properties": {"effective_date": {"type": "string", "format": "date", "title": "Effective Date", "examples": ["2023-07-28"]}, "expiration_date": {"type": "string", "format": "date", "title": "Expiration Date", "examples": ["2024-07-28"]}}, "type": "object", "required": ["effective_date", "expiration_date"], "title": "PolicyPeriod"}, "PolicyReview": {"properties": {"policy_draft_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Policy Draft Id", "examples": ["001234567890"]}, "claims_and_risk_analysis": {"$ref": "#/components/schemas/ClaimsAndRiskAnalysis"}, "quote": {"$ref": "#/components/schemas/Quote"}, "payment": {"$ref": "#/components/schemas/Payment"}}, "type": "object", "required": ["policy_draft_id", "claims_and_risk_analysis", "quote", "payment"], "title": "PolicyReview"}, "PolicyStatus": {"type": "string", "enum": ["POLICY_STATUS_VALUE_CANCELLATION_BASED_ON_UNDERWRITING", "POLICY_STATUS_VALUE_CANCELLATION_FOR_OTHER_REASON", "POLICY_STATUS_VALUE_CANCELLATION_FOR_POLICY_LAPSE", "POLICY_STATUS_VALUE_CANCELLATION_INSURED_REQUEST", "POLICY_STATUS_VALUE_CANCELLATION_OF_NEW_POLICY", "POLICY_STATUS_VALUE_CANCELLATION_OF_RENEWAL", "POLICY_STATUS_VALUE_CANCELLED_FOR_INSURANCE_FRAUD", "POLICY_STATUS_VALUE_CANCELLED_FOR_MISREPRESENTATION", "POLICY_STATUS_VALUE_CANCELLED_FOR_NON_PAYMENT", "POLICY_STATUS_VALUE_MID_TERM_CANCELLATION", "POLICY_STATUS_VALUE_MOVING_INTERNAL", "POLICY_STATUS_VALUE_REINSTATEMENT_OF_TEMPORARY_SUSPENSION", "POLICY_STATUS_VALUE_RENEWAL", "POLICY_STATUS_VALUE_RENEWAL_TERM_CANCELLATION_DUE_TO_CURRENT_TERM_CANCELLATION", "POLICY_STATUS_VALUE_TEMPORARY_SUSPENSION", "POLICY_STATUS_VALUE_TOTAL_LOSS"], "title": "PolicyStatus"}, "PriorInsurance": {"properties": {"policy_number": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Policy Number", "examples": ["A12-345B-678C"]}, "policy_status": {"$ref": "#/components/schemas/PolicyStatus"}, "policy_expiry_date": {"type": "string", "format": "date", "title": "Policy Expiry Date", "examples": ["2023-07-28"]}}, "type": "object", "required": ["policy_status", "policy_expiry_date"], "title": "PriorInsurance"}, "Province": {"type": "string", "enum": ["AB", "BC", "MB", "NB", "NL", "NS", "ON", "PE", "QC", "SK", "NT", "NU", "YT"], "title": "Province"}, "Quote": {"properties": {"policy_number": {"type": "string", "title": "Policy Number", "examples": ["A12-345B-678C"]}, "policy_period": {"$ref": "#/components/schemas/PolicyPeriod"}, "primary_named_insured": {"type": "string", "title": "Primary Named Insured", "examples": ["John Smith"]}, "mailing_address": {"anyOf": [{"$ref": "#/components/schemas/Address"}, {"type": "null"}]}, "broker_code_legal_name": {"type": "string", "title": "Broker Code Legal Name"}, "transaction_effective_date": {"type": "string", "format": "date", "title": "Transaction Effective Date", "examples": ["2023-07-28"]}, "total_charged_premium": {"type": "string", "title": "Total Charged Premium", "description": "The total amount charged for the policy, excluding taxes. Must be greater than or equal to 0.", "examples": ["123.12"]}, "total_cost_including_taxes": {"type": "string", "title": "Total Cost Including Taxes", "description": "The total amount charged for the policy, including taxes. Must be greater than or equal to 0.", "examples": ["234.56"]}, "total_transaction_premium": {"type": "string", "title": "Total Transaction Premium", "description": "The total difference in price associated with this quote change. Positive numbers indicate an increase in price, negative numbers indicate a decrease in price.", "examples": ["56.78"]}}, "type": "object", "required": ["policy_number", "policy_period", "primary_named_insured", "broker_code_legal_name", "transaction_effective_date", "total_charged_premium", "total_cost_including_taxes", "total_transaction_premium"], "title": "Quote"}, "QuoteResponse": {"properties": {"draft_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Draft Id"}, "quote_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Quote Id"}, "success": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Success"}, "error_message": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Message"}, "error_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Error Type"}}, "type": "object", "title": "QuoteResponse"}, "RemoveDriverOnlyChangeData": {"properties": {"change_type": {"type": "string", "enum": ["REMOVE_DRIVER_ONLY"], "const": "REMOVE_DRIVER_ONLY", "title": "Change Type", "default": "REMOVE_DRIVER_ONLY"}, "driver_license_number": {"type": "string", "title": "Driver License Number"}}, "type": "object", "required": ["driver_license_number"], "title": "RemoveDriverOnlyChangeData", "discriminator_value": "REMOVE_DRIVER_ONLY"}, "RemoveVehicleOnlyChangeData": {"properties": {"change_type": {"type": "string", "enum": ["REMOVE_VEHICLE_ONLY"], "const": "REMOVE_VEHICLE_ONLY", "title": "Change Type", "default": "REMOVE_VEHICLE_ONLY"}, "vehicle_vin": {"type": "string", "title": "Vehicle Vin"}}, "type": "object", "required": ["vehicle_vin"], "title": "RemoveVehicleOnlyChangeData", "discriminator_value": "REMOVE_VEHICLE_ONLY"}, "RequestType": {"type": "string", "enum": ["ADD_DRIVER", "ADD_VEHICLE", "EDIT_DRIVER", "REMOVE_DRIVER", "REMOVE_VEHICLE", "SWAP_VEHICLE", "EDIT_VEHICLE", "MODIFY_COVERAGES", "GET_DRIVER", "GET_VEHICLE", "GET_POLICY", "GET_POLICY_BILLING_DETAILS", "EDIT_POLICY_BILLING_DETAILS", "DELETE_OPEN_DRAFTS", "CANCEL_POLICY"], "title": "RequestType"}, "SetCoveragesOnly": {"properties": {"coverages_for_existing_vehicles": {"anyOf": [{"items": {"$ref": "#/components/schemas/ExistingVehicleCoverageInput"}, "type": "array"}, {"type": "null"}], "title": "Coverages For Existing Vehicles"}, "coverages_for_new_vehicles": {"anyOf": [{"items": {"$ref": "#/components/schemas/NewVehicleCoverageInput"}, "type": "array"}, {"type": "null"}], "title": "Coverages For New Vehicles"}}, "type": "object", "title": "SetCoveragesOnly"}, "SetCoveragesOnlyChangeData": {"properties": {"change_type": {"type": "string", "enum": ["SET_COVERAGES_ONLY"], "const": "SET_COVERAGES_ONLY", "title": "Change Type", "default": "SET_COVERAGES_ONLY"}, "coverage_changes": {"$ref": "#/components/schemas/SetCoveragesOnly"}}, "type": "object", "required": ["coverage_changes"], "title": "SetCoveragesOnlyChangeData", "discriminator_value": "SET_COVERAGES_ONLY"}, "SwapVehicleInput": {"properties": {"policy": {"$ref": "#/components/schemas/PolicyChangeInput"}, "new_vehicle": {"$ref": "#/components/schemas/CreateVehicleForSwapInput"}, "driver_assignments_for_existing_vehicles": {"items": {"$ref": "#/components/schemas/ExistingVehicleAssignDriverInput"}, "type": "array", "title": "Driver Assignments For Existing Vehicles", "description": "A list of vehicle VINs and the drivers associated to the existing vehicles."}, "coverages_for_existing_vehicles": {"items": {"$ref": "#/components/schemas/ExistingVehicleCoverageInput"}, "type": "array", "title": "Coverages For Existing Vehicles", "description": "A list of vehicle VINs and the coverages to set on those vehicles."}}, "type": "object", "required": ["new_vehicle", "driver_assignments_for_existing_vehicles"], "title": "SwapVehicleInput"}, "SwapVehicleOnlyChangeData": {"properties": {"change_type": {"type": "string", "enum": ["SWAP_VEHICLE_DETAILS_ONLY"], "const": "SWAP_VEHICLE_DETAILS_ONLY", "title": "Change Type", "default": "SWAP_VEHICLE_DETAILS_ONLY"}, "vehicle_vin": {"type": "string", "title": "Vehicle Vin"}, "new_vehicle": {"$ref": "#/components/schemas/VehicleDetailsInput"}}, "type": "object", "required": ["vehicle_vin", "new_vehicle"], "title": "SwapVehicleOnlyChangeData", "discriminator_value": "SWAP_VEHICLE_DETAILS_ONLY"}, "SwapVehicleResponse": {"properties": {"added_vehicle": {"$ref": "#/components/schemas/Vehicle"}, "removed_vehicle": {"$ref": "#/components/schemas/Vehicle"}, "policy_review": {"$ref": "#/components/schemas/PolicyReview"}}, "type": "object", "required": ["added_vehicle", "removed_vehicle", "policy_review"], "title": "SwapVehicleResponse"}, "TransportationReplacementCoverage20": {"type": "string", "enum": ["TRANSPORTATION_REPLACEMENT_VALUE_900", "TRANSPORTATION_REPLACEMENT_VALUE_1200", "TRANSPORTATION_REPLACEMENT_VALUE_1500", "TRANSPORTATION_REPLACEMENT_VALUE_2000", "TRANSPORTATION_REPLACEMENT_VALUE_2500", "TRANSPORTATION_REPLACEMENT_VALUE_3000", "TRANSPORTATION_REPLACEMENT_VALUE_3500", "TRANSPORTATION_REPLACEMENT_VALUE_4000", "TRANSPORTATION_REPLACEMENT_VALUE_5000"], "title": "TransportationReplacementCoverage20"}, "UnderwritingIssue": {"properties": {"message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "UnderwritingIssue"}, "UpdateCredentialsRequest": {"properties": {"id": {"type": "string", "minLength": 1, "title": "Id"}, "carrier_external_id": {"type": "string", "title": "Carrier External Id"}, "username": {"type": "string", "minLength": 1, "title": "Username"}, "password": {"type": "string", "minLength": 1, "title": "Password"}}, "type": "object", "required": ["id", "carrier_external_id", "username", "password"], "title": "UpdateCredentialsRequest"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "Vehicle": {"properties": {"vin": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Vin", "description": "Vehicle Identification Number", "examples": ["5FNRL5H30GB027317"]}, "vehicle_number": {"anyOf": [{"type": "integer", "minimum": 1.0}, {"type": "null"}], "title": "Vehicle Number", "description": "Sequential vehicle number (1, 2, 3, etc.) for identification within the policy", "examples": [1]}, "abs": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Abs"}, "model_year": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Model Year", "description": "Model year of the vehicle in YYYY format"}, "make": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Make"}, "model": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Model"}, "vicc_vehicle_code": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Vicc Vehicle Code"}, "ownership": {"anyOf": [{"$ref": "#/components/schemas/VehicleOwnership"}, {"type": "null"}]}, "condition_purchased": {"anyOf": [{"$ref": "#/components/schemas/VehicleCondition"}, {"type": "null"}]}, "date_purchased": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Date Purchased", "examples": ["2023-07-28"]}, "appraisal_date": {"anyOf": [{"type": "string", "format": "date"}, {"type": "null"}], "title": "Appraisal Date", "examples": ["2023-07-28"]}, "appraised_value": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Appraised Value", "description": "The appraised dollar value of the vehicle. Must be greater than or equal to 0.", "examples": ["45000"]}, "vehicle_add_on_value": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Vehicle Add On Value", "description": "The dollar value of vehicle modifications/add-ons. Must be greater than or equal to 0.", "examples": ["2500"]}, "annual_driving_distance": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Annual Driving Distance", "description": "The total distance driven annually in kilometers. Must be greater than or equal to 0.", "examples": ["10000"]}, "km_at_purchase": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Km At Purchase", "description": "The number of kilometers the vehicle had when purchased. Must be greater than or equal to 0.", "examples": ["100000"]}, "stated_value": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Stated Value", "description": "The dollar value of the vehicle in its current condition. Must be greater than or equal to 0.", "examples": ["40000"]}, "vehicle_cost": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Vehicle Cost", "examples": ["70000"]}, "odometer_reading": {"anyOf": [{"type": "integer", "maximum": 999999.0, "minimum": 0.0}, {"type": "null"}], "title": "Odometer Reading", "description": "The current odometer reading of the vehicle. Must be between 0 and 999999.", "examples": ["50000"]}, "one_way_commute_distance": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "One Way Commute Distance", "description": "The distance in kilometers for a one-way commute. Must be greater than or equal to 0.", "examples": ["5"]}, "percentage_of_business_use": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Percentage Of Business Use", "description": "The percentage of the vehicle's use that is for business purposes. Must be greater than or equal to 0.", "examples": ["20"]}, "annual_business_kms": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Annual Business Kms", "description": "Annual kilometers driven for business use. Must be greater than or equal to 0.", "examples": ["5000"]}, "vehicle_used_for_farming": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Vehicle Used For Farming", "description": "The vehicle is used mainly on a farm. Vehicles that do not have a valid Insurance Bureau of Canada's car code as found on the IBC Vehicle Information tables will be considered a commercial use vehicle."}, "engine_fuel": {"anyOf": [{"$ref": "#/components/schemas/VehicleEngineFuel"}, {"type": "null"}]}, "winter_tires": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Winter Tires"}, "after_market_alarm_type": {"anyOf": [{"$ref": "#/components/schemas/VehicleAfterMarketAlarmType"}, {"type": "null"}]}, "anti_theft_device": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Anti Theft Device", "description": "Whether the vehicle has an anti-theft device installed (CAA specific boolean field, distinct from after_market_alarm_type enum)"}, "primary_use": {"anyOf": [{"$ref": "#/components/schemas/VehiclePrimaryUse"}, {"type": "null"}]}, "vehicle_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Vehicle Type", "description": "The type/classification of the vehicle (e.g., 'Private Passenger - Auto')"}, "ubi_compatible": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Ubi Compatible", "description": "Whether the vehicle is compatible with Usage-Based Insurance (UBI) tracking"}, "high_theft_risk_vehicle": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "High Theft Risk Vehicle", "description": "Whether the vehicle is considered a high theft risk vehicle"}, "hybrid_electric_vehicle": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Hybrid Electric Vehicle", "description": "Whether the vehicle is a hybrid or electric vehicle"}, "months_operated_outside_canada": {"anyOf": [{"type": "integer", "maximum": 12.0, "minimum": 0.0}, {"type": "null"}], "title": "Months Operated Outside Canada", "description": "Number of months the vehicle is operated outside of Canada", "examples": ["2"]}, "has_non_factory_electronics": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Has Non Factory Electronics", "description": "Whether the vehicle has non-factory electronics installed"}, "non_factory_electronics_value": {"anyOf": [{"$ref": "#/components/schemas/VehicleNonFactoryElectronics"}, {"type": "null"}], "description": "The value range of non-factory electronics (Less than $1,500, More than $1,500, or None)"}, "is_used_for_carpooling": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Used For Carpooling", "description": "Whether the vehicle is used for carpooling"}, "carpooling_passenger_count": {"anyOf": [{"type": "integer", "maximum": 20.0, "minimum": 1.0}, {"type": "null"}], "title": "Carpooling Passenger Count", "description": "Number of passengers when carpooling", "examples": ["4"]}, "unrepaired_damaged": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Unrepaired Damaged"}, "garaged_at": {"anyOf": [{"$ref": "#/components/schemas/Address"}, {"type": "null"}]}, "vehicle_modifications_exist": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Vehicle Modifications Exist"}, "modifications_type": {"anyOf": [{"$ref": "#/components/schemas/VehicleModificationType"}, {"type": "null"}], "description": "The type of vehicle modifications (Accessibility or Other) - CAA specific field"}, "is_used_to_carry_paying_passengers": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is Used To Carry Paying Passengers"}, "vehicle_modifications": {"anyOf": [{"$ref": "#/components/schemas/VehicleModifications"}, {"type": "null"}]}, "does_attached_equipment_type_exist": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Does Attached Equipment Type Exist"}, "is_the_vehicle_rented_or_leased_to_others": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Is The Vehicle Rented Or Leased To Others"}, "does_vehicle_carry_passengers_for_compensation_or_hire": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Does Vehicle Carry Passengers For Compensation Or Hire"}, "does_vehicle_haul_trailer": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Does Vehicle Haul Trailer"}, "does_vehicle_carry_explosives_or_radioactive_material": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Does Vehicle Carry Explosives Or Radioactive Material"}, "tag_device_installed": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Tag Device Installed"}, "pre_existing_damage": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Pre Existing Damage"}, "modifications_describe": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Modifications Describe", "description": "Description of vehicle modifications/customizations (conditional field)"}, "unrepaired_damage_describe": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Unrepaired Damage Describe", "description": "Description of unrepaired damage (conditional field)"}, "non_factory_electronics_describe": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Non Factory Electronics Describe", "description": "Description of non-factory electronics (conditional field)"}, "carrying_passengers_describe": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Carrying Passengers Describe", "description": "Description of carrying paying passengers usage (conditional field)"}, "additional_interests": {"anyOf": [{"items": {"$ref": "#/components/schemas/AdditionalInterest"}, "type": "array"}, {"type": "null"}], "title": "Additional Interests", "description": "List of additional interest parties (liens, lessors, etc.) for this vehicle. None if not supported by carrier."}, "license_plate_jurisdiction": {"anyOf": [{"$ref": "#/components/schemas/VehicleLicensePlateJurisdiction"}, {"type": "null"}], "description": "The jurisdiction of the vehicle's license plate."}}, "type": "object", "title": "Vehicle"}, "VehicleAfterMarketAlarmType": {"type": "string", "enum": ["VEHICLE_AFTER_MARKET_ALARM_TYPE_VALUE_AUDIBLE", "VEHICLE_AFTER_MARKET_ALARM_TYPE_VALUE_IMMOBILE"], "title": "VehicleAfterMarketAlarmType"}, "VehicleAllPerilsAmount": {"type": "string", "enum": ["ALL_PERILS_VALUE_300", "ALL_PERILS_VALUE_500", "ALL_PERILS_VALUE_750", "ALL_PERILS_VALUE_1000", "ALL_PERILS_VALUE_1500", "ALL_PERILS_VALUE_2000", "ALL_PERILS_VALUE_2500", "ALL_PERILS_VALUE_3000", "ALL_PERILS_VALUE_5000", "ALL_PERILS_VALUE_7500", "ALL_PERILS_VALUE_10000", "ALL_PERILS_VALUE_15000"], "title": "VehicleAllPerilsAmount"}, "VehicleBodilyInjury": {"type": "string", "enum": ["BODILY_INJURY_VALUE_200_000", "BODILY_INJURY_VALUE_300_000", "BODILY_INJURY_VALUE_500_000", "BODILY_INJURY_VALUE_1_000_000", "BODILY_INJURY_VALUE_2_000_000", "BODILY_INJURY_VALUE_3_000_000", "BODILY_INJURY_VALUE_4_000_000", "BODILY_INJURY_VALUE_5_000_000"], "title": "VehicleBodilyInjury"}, "VehicleCollisionCoverageAmount": {"type": "string", "enum": ["COLLISION_COVERAGE_VALUE_300", "COLLISION_COVERAGE_VALUE_500", "COLLISION_COVERAGE_VALUE_750", "COLLISION_COVERAGE_VALUE_1000", "COLLISION_COVERAGE_VALUE_1500", "COLLISION_COVERAGE_VALUE_2000", "COLLISION_COVERAGE_VALUE_2500", "COLLISION_COVERAGE_VALUE_3000", "COLLISION_COVERAGE_VALUE_4000", "COLLISION_COVERAGE_VALUE_5000", "COLLISION_COVERAGE_VALUE_7500", "COLLISION_COVERAGE_VALUE_10000", "COLLISION_COVERAGE_VALUE_15000"], "title": "VehicleCollisionCoverageAmount"}, "VehicleCombinedCoverage": {"properties": {"transporation_replacement_coverage_limit": {"$ref": "#/components/schemas/TransportationReplacementCoverage20", "title": "Transporation Replacement Coverage Limit"}, "liability_for_damage_to_non_owned_automobiles": {"$ref": "#/components/schemas/LiabilityForDamageToNonOwnedAutomobiles27", "title": "Liability For Damage To Non Owned Automobiles"}}, "type": "object", "title": "VehicleCombinedCoverage"}, "VehicleComprehensiveCoverageAmount": {"type": "string", "enum": ["COMPREHENSIVE_COVERAGE_VALUE_300", "COMPREHENSIVE_COVERAGE_VALUE_500", "COMPREHENSIVE_COVERAGE_VALUE_750", "COMPREHENSIVE_COVERAGE_VALUE_1000", "COMPREHENSIVE_COVERAGE_VALUE_1500", "COMPREHENSIVE_COVERAGE_VALUE_2000", "COMPREHENSIVE_COVERAGE_VALUE_2500", "COMPREHENSIVE_COVERAGE_VALUE_3000", "COMPREHENSIVE_COVERAGE_VALUE_4000", "COMPREHENSIVE_COVERAGE_VALUE_5000", "COMPREHENSIVE_COVERAGE_VALUE_7500", "COMPREHENSIVE_COVERAGE_VALUE_10000", "COMPREHENSIVE_COVERAGE_VALUE_15000"], "title": "VehicleComprehensiveCoverageAmount"}, "VehicleCondition": {"type": "string", "enum": ["VEHICLE_CONDITION_VALUE_NEW", "VEHICLE_CONDITION_VALUE_USED", "VEHICLE_CONDITION_VALUE_DEMO"], "title": "VehicleCondition"}, "VehicleCoverage": {"properties": {"suspension_of_coverage_opcf_16": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Suspension Of Coverage Opcf 16"}, "reinstatement_of_coverage_opcf_17": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Reinstatement Of Coverage Opcf 17"}, "suspension_of_coverage_by_removing_coverages": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Suspension Of Coverage By Removing Coverages"}, "third_party_liability": {"anyOf": [{"$ref": "#/components/schemas/VehicleThirdPartyLiability"}, {"type": "null"}], "examples": ["VEHICLE_THIRD_PARTY_LIABILITY_VALUE_500_000"]}, "direct_compensation_of_property_damage_value": {"anyOf": [{"$ref": "#/components/schemas/VehicleDirectCompensationOfPropertyDamageOptions"}, {"type": "null"}]}, "all_perils": {"anyOf": [{"$ref": "#/components/schemas/VehicleAllPerilsAmount"}, {"type": "null"}], "examples": ["ALL_PERILS_VALUE_500"]}, "comprehensive_coverage": {"anyOf": [{"$ref": "#/components/schemas/VehicleComprehensiveCoverageAmount"}, {"type": "null"}], "examples": ["COMPREHENSIVE_COVERAGE_VALUE_300"]}, "collision_coverage": {"anyOf": [{"$ref": "#/components/schemas/VehicleCollisionCoverageAmount"}, {"type": "null"}], "examples": ["COLLISION_COVERAGE_VALUE_500"]}, "conviction_rating_protector": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Conviction Rating Protector"}, "roadside_assistance": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Roadside Assistance"}, "transportation_replacement": {"anyOf": [{"$ref": "#/components/schemas/VehicleTransportationReplacementDays"}, {"type": "null"}]}, "damage_to_non_owned_automobiles": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Damage To Non Owned Automobiles"}, "family_protection": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Family Protection"}, "property_damage_liability": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Property Damage Liability"}, "accident_benefits": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Accident Benefits"}, "uninsured_automobile": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Uninsured Automobile"}, "driving_record_protection_endorsement_opcf_321": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Driving Record Protection Endorsement Opcf 321"}, "combined_coverage_opcf_320": {"anyOf": [{"$ref": "#/components/schemas/VehicleCombinedCoverage"}, {"type": "null"}]}, "minor_conviction_rating_protector_endorsement_opcf_324": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Minor Conviction Rating Protector Endorsement Opcf 324"}, "bodily_injury": {"anyOf": [{"$ref": "#/components/schemas/VehicleBodilyInjury"}, {"type": "null"}]}, "medical_rehabilitation_and_attendant_care": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Medical Rehabilitation And Attendant Care"}, "specified_perils_excluding_collision_or_upset": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Specified Perils Excluding Collision Or Upset"}, "permission_to_rent_or_lease_automobiles_opcf_5": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Permission To Rent Or Lease Automobiles Opcf 5"}, "agreement_not_to_recover_loss_or_damage_due_to_collision_opcf_49": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Agreement Not To Recover Loss Or Damage Due To Collision Opcf 49"}, "indexation_benefit_consumer_price_index": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Indexation Benefit Consumer Price Index"}, "accident_waiver": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Accident Waiver"}, "race_track_exclusion": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Race Track Exclusion"}, "drive_government_automobiles_opcf_3": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Drive Government Automobiles Opcf 3"}, "restricting_glass_coverage_opcf_13c": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Restricting Glass Coverage Opcf 13C"}, "limiting_the_amount_paid_opcf_19": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Limiting The Amount Paid Opcf 19"}, "agreed_value_opcf_19a": {"anyOf": [{"$ref": "#/components/schemas/AgreedValueOpcf19ACoverage"}, {"type": "null"}]}, "lienholder_protection_opcf_23a": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Lienholder Protection Opcf 23A"}, "removing_coverage_for_attached_machinery_opcf_30": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Removing Coverage For Attached Machinery Opcf 30"}, "limit_for_electronic_accessories_and_equipment_amount_opcf_38": {"anyOf": [{"type": "number", "maximum": 99999.0, "minimum": 100.0}, {"type": "string"}, {"type": "null"}], "title": "Limit For Electronic Accessories And Equipment Amount Opcf 38"}, "fire_deductible_opcf_40": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Fire Deductible Opcf 40"}, "removing_depreciation_opcf_43": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Removing Depreciation Opcf 43"}, "removing_depreciation_lessee_opcf_43a": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Removing Depreciation Lessee Opcf 43A"}, "financial_responsibility_certificate": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Financial Responsibility Certificate"}, "death_and_funeral_benefits": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Death And Funeral Benefits"}, "income_replacement_limit": {"anyOf": [{"$ref": "#/components/schemas/IncomeReplacementLimit"}, {"type": "null"}]}, "medical_rehabilitation_and_attendant_care_limit": {"anyOf": [{"$ref": "#/components/schemas/MedicalRehabilitationAndAttendantCareLimit"}, {"type": "null"}]}, "optional_catastrophic_impairment": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Optional Catastrophic Impairment"}, "caregiver_housekeeping_and_home_maintenance": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Caregiver Housekeeping And Home Maintenance"}, "dependant_care": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Dependant Care"}, "offset_tort_deductibles_opcf_48": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Offset Tort Deductibles Opcf 48"}}, "type": "object", "title": "VehicleCoverage"}, "VehicleDetailsInput": {"properties": {"vin": {"anyOf": [{"type": "string", "maxLength": 17, "minLength": 17}, {"type": "null"}], "title": "Vin", "description": "Vehicle Identification Number", "examples": ["5FNRL5H30GB027317"]}, "model_year": {"type": "string", "title": "Model Year", "description": "Model year of the vehicle in YYYY format"}, "make": {"type": "string", "title": "Make"}, "model": {"type": "string", "title": "Model"}, "condition_purchased": {"$ref": "#/components/schemas/VehicleCondition", "title": "Condition Purchased"}, "primary_use": {"anyOf": [{"$ref": "#/components/schemas/VehiclePrimaryUse"}, {"type": "null"}]}, "one_way_commute_distance": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "One Way Commute Distance", "description": "The distance in kilometers for a one-way commute. Must be greater than or equal to 0.", "examples": ["5"]}, "annual_driving_distance": {"type": "integer", "minimum": 0.0, "title": "Annual Driving Distance", "description": "The total distance driven annually in kilometers. Must be greater than or equal to 0.", "examples": ["10000"]}, "ownership": {"$ref": "#/components/schemas/VehicleOwnership"}, "vehicle_cost": {"type": "integer", "maximum": 999998.0, "minimum": 0.0, "title": "Vehicle Cost", "description": "The list price of the vehicle when it was new. Must be between 0 and 999,998.", "examples": ["70000"]}, "winter_tires": {"type": "boolean", "title": "Winter Tires"}, "after_market_alarm_type": {"anyOf": [{"$ref": "#/components/schemas/VehicleAfterMarketAlarmType"}, {"type": "null"}]}, "engine_fuel": {"$ref": "#/components/schemas/VehicleEngineFuel", "title": "Engine Fuel"}, "date_purchased": {"type": "string", "format": "date", "title": "Date Purchased"}, "tag_device_installed": {"type": "boolean", "title": "Tag Device Installed"}, "appraisal_date": {"type": "string", "format": "date", "title": "Appraisal Date", "examples": ["2023-07-28"]}, "does_attached_equipment_type_exist": {"type": "boolean", "title": "Does Attached Equipment Type Exist"}, "pre_existing_damage": {"type": "boolean", "title": "Pre Existing Damage"}, "km_at_purchase": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Km At Purchase", "description": "The number of kilometers the vehicle had when purchased. Must be greater than or equal to 0.", "examples": ["100000"]}, "stated_value": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Stated Value", "description": "The dollar value of the vehicle in its current condition. Must be greater than or equal to 0.", "examples": ["40000"]}, "odometer_reading": {"anyOf": [{"type": "integer", "maximum": 999999.0, "minimum": 0.0}, {"type": "null"}], "title": "Odometer Reading", "description": "The current odometer reading of the vehicle. Must be between 0 and 999999.", "examples": ["125000"]}, "license_plate_jurisdiction": {"anyOf": [{"$ref": "#/components/schemas/VehicleLicensePlateJurisdiction"}, {"type": "null"}], "description": "The jurisdiction of the vehicle's license plate."}}, "type": "object", "required": ["one_way_commute_distance", "annual_driving_distance", "ownership", "vehicle_cost", "winter_tires"], "title": "VehicleDetailsInput"}, "VehicleDirectCompensationOfPropertyDamageOptions": {"type": "string", "enum": ["DIRECT_COMPENSATION_OF_PROPERTY_VALUE_0", "DIRECT_COMPENSATION_OF_PROPERTY_VALUE_100", "DIRECT_COMPENSATION_OF_PROPERTY_VALUE_300", "DIRECT_COMPENSATION_OF_PROPERTY_VALUE_500"], "title": "VehicleDirectCompensationOfPropertyDamageOptions"}, "VehicleDriverRelationship": {"type": "string", "enum": ["VEHICLE_DRIVER_RELATIONSHIP_VALUE_SELF", "VEHICLE_DRIVER_RELATIONSHIP_VALUE_RELATIVE", "VEHICLE_DRIVER_RELATIONSHIP_VALUE_FRIEND", "VEHICLE_DRIVER_RELATIONSHIP_VALUE_EMPLOYEE", "VEHICLE_DRIVER_RELATIONSHIP_VALUE_SPOUSE", "VEHICLE_DRIVER_RELATIONSHIP_VALUE_CHILD", "VEHICLE_DRIVER_RELATIONSHIP_VALUE_PARENT", "VEHICLE_DRIVER_RELATIONSHIP_VALUE_GRANDPARENT", "VEHICLE_DRIVER_RELATIONSHIP_VALUE_DOMESTIC_PARTNER", "VEHICLE_DRIVER_RELATIONSHIP_VALUE_OTHER"], "title": "VehicleDriverRelationship"}, "VehicleDriverTypeOfOperator": {"type": "string", "enum": ["VEHICLE_DRIVER_TYPE_OF_OPERATOR_VALUE_PRIMARY", "VEHICLE_DRIVER_TYPE_OF_OPERATOR_VALUE_SECONDARY", "VEHICLE_DRIVER_TYPE_OF_OPERATOR_VALUE_ISO"], "title": "VehicleDriverTypeOfOperator"}, "VehicleEngineFuel": {"type": "string", "enum": ["VEHICLE_ENGINE_FUEL_VALUE_GAS", "VEHICLE_ENGINE_FUEL_VALUE_ELECTRIC", "VEHICLE_ENGINE_FUEL_VALUE_HYBRID", "VEHICLE_ENGINE_FUEL_VALUE_ALCOHOL", "VEHICLE_ENGINE_FUEL_VALUE_DIESEL", "VEHICLE_ENGINE_FUEL_VALUE_PROPANE", "VEHICLE_ENGINE_FUEL_VALUE_NATURAL_GAS", "VEHICLE_ENGINE_FUEL_VALUE_UNKNOWN"], "title": "VehicleEngineFuel"}, "VehicleLicensePlateJurisdiction": {"type": "string", "enum": ["AB", "BC", "MB", "NB", "NL", "NS", "ON", "PE", "QC", "SK", "NT", "NU", "YT"], "title": "VehicleLicensePlateJurisdiction"}, "VehicleLookupMakesList": {"properties": {"results": {"items": {"type": "string"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["results"], "title": "VehicleLookupMakesList"}, "VehicleLookupModelYearsList": {"properties": {"results": {"items": {"type": "integer"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["results"], "title": "VehicleLookupModelYearsList"}, "VehicleLookupModelsList": {"properties": {"results": {"items": {"type": "string"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["results"], "title": "VehicleLookupModelsList"}, "VehicleModificationType": {"type": "string", "enum": ["VEHICLE_MODIFICATION_TYPE_VALUE_ACCESSIBILITY", "VEHICLE_MODIFICATION_TYPE_VALUE_OTHER"], "title": "VehicleModificationType"}, "VehicleModifications": {"type": "string", "enum": ["VEHICLE_MODIFICATION_VALUE_ENGINE_PERFORMANCE_OR_CONFIGURATION", "VEHICLE_MODIFICATION_VALUE_FRAME_ALTERATIONS", "VEHICLE_MODIFICATION_VALUE_NITROUS_OXIDE", "VEHICLE_MODIFICATION_VALUE_OTHER", "VEHICLE_MODIFICATION_VALUE_POWER_INCREASING_EXHAUSTS", "VEHICLE_MODIFICATION_VALUE_SUSPENSION_ALTERATION_EXT", "VEHICLE_MODIFICATION_VALUE_TRANSMISSION_PERFORMANCE_OR_CONFIGURATION"], "title": "VehicleModifications"}, "VehicleNonFactoryElectronics": {"type": "string", "enum": ["VEHICLE_NON_FACTORY_ELECTRONICS_VALUE_LESS_THAN_1500", "VEHICLE_NON_FACTORY_ELECTRONICS_VALUE_MORE_THAN_1500", "VEHICLE_NON_FACTORY_ELECTRONICS_VALUE_NONE"], "title": "VehicleNonFactoryElectronics"}, "VehicleOwnership": {"type": "string", "enum": ["VEHICLE_OWNERSHIP_VALUE_OWNED", "VEHICLE_OWNERSHIP_VALUE_LEASED", "VEHICLE_OWNERSHIP_VALUE_FINANCED"], "title": "VehicleOwnership"}, "VehiclePrimaryUse": {"type": "string", "enum": ["PRIMARY_USE_VALUE_ARTISAN", "PRIMARY_USE_VALUE_BUSINESS", "PRIMARY_USE_VALUE_PLEASURE", "PRIMARY_USE_VALUE_COMMUTE", "PRIMARY_USE_VALUE_CLERGYMAN", "PRIMARY_USE_VALUE_FARM"], "title": "VehiclePrimaryUse"}, "VehicleThirdPartyLiability": {"type": "string", "enum": ["VEHICLE_THIRD_PARTY_LIABILITY_VALUE_200_000", "VEHICLE_THIRD_PARTY_LIABILITY_VALUE_500_000", "VEHICLE_THIRD_PARTY_LIABILITY_VALUE_1_000_000", "VEHICLE_THIRD_PARTY_LIABILITY_VALUE_2_000_000"], "title": "VehicleThirdPartyLiability"}, "VehicleTransportationReplacementDays": {"type": "string", "enum": ["VEHICLE_TRANSPORATION_REPLACEMENT_VALUE_30_DAYS", "VEHICLE_TRANSPORATION_REPLACEMENT_VALUE_45_DAYS", "VEHICLE_TRANSPORATION_REPLACEMENT_VALUE_60_DAYS"], "title": "VehicleTransportationReplacementDays"}, "VerifyRequest": {"properties": {"carrier_external_id": {"type": "string", "title": "Carrier External Id"}, "ubid": {"type": "string", "minLength": 1, "pattern": "^[a-zA-Z0-9\\-/_+=.@!]+$", "title": "Ubid"}}, "type": "object", "required": ["carrier_external_id", "ubid"], "title": "VerifyRequest"}}, "securitySchemes": {"APIKeyHeader": {"type": "apiKey", "description": "The API key given to you by DataBraid to authenticate requests", "in": "header", "name": "X-API-Key"}}}}
